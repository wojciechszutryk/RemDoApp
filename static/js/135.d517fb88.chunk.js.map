{"version":3,"file":"static/js/135.d517fb88.chunk.js","mappings":"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","sources":["atomicComponents/atoms/Separator/styles.ts","atomicComponents/atoms/Separator/index.tsx","framework/dialogs/components/CollaborantsDrawer/queries/getUserCollaborants.query..ts","framework/dialogs/components/ReminderDialog/components/styles.ts","framework/dialogs/components/ReminderDialog/components/CollaborantAutocomplete.tsx","framework/dialogs/components/ReminderDialog/components/DatesInfo.tsx","framework/dialogs/components/ReminderDialog/components/TodoListSelect.tsx","pages/TodoListsPage/queries/getUserTodoLists.query.ts","framework/dialogs/components/ReminderDialog/hooks/useCreateDefaultReminderDialogData.ts","framework/dialogs/components/ReminderDialog/styles.ts","framework/dialogs/components/ReminderDialog/index.tsx","pages/RemindersPage/mutations/createReminder/createReminder.mutation.ts","framework/dialogs/components/TodoListDialog/IconPicker/styles.ts","framework/dialogs/components/TodoListDialog/IconPicker/index.tsx","pages/RemindersPage/mutations/editReminder/editReminder.mutation.ts","../../models/collaboration/collaboration.enum.ts","../../models/collaboration/collaboration.urls.ts","../node_modules/@mui/icons-material/EditCalendar.js","../node_modules/@mui/icons-material/HelpOutline.js"],"sourcesContent":["import { styled } from \"@mui/material\";\n\nexport const StyledWrapper = styled(\"div\", {\n  shouldForwardProp: (prop) =>\n    prop !== \"spacingTop\" && prop !== \"spacingBottom\",\n})<{ spacingTop?: number; spacingBottom?: number }>(\n  ({ spacingTop, spacingBottom }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"20px\",\n    marginTop: spacingTop,\n    marginBottom: spacingBottom,\n  })\n);\n\nexport const StyledLine = styled(\"div\", {\n  shouldForwardProp: (prop) => prop !== \"color\",\n})<{ color?: \"primary\" | \"secondary\" }>(({ theme, color }) => ({\n  flexGrow: 1,\n  height: \"9px\",\n  borderBottom: `2px solid ${theme.palette.primary.contrastText}`,\n  borderColor: theme.palette[color || \"primary\"].contrastText,\n}));\n\nexport const StyledText = styled(\"div\", {\n  shouldForwardProp: (prop) => prop !== \"color\",\n})<{ color?: \"primary\" | \"secondary\" }>(({ theme, color }) => ({\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  color: theme.palette[color || \"primary\"].contrastText,\n}));\n","import { StyledLine, StyledText, StyledWrapper } from \"./styles\";\n\ninterface Props {\n  text: string;\n  variant?: \"primary\" | \"secondary\";\n  spacingBottom?: number;\n  spacingTop?: number;\n}\n\nexport const Separator = ({\n  text,\n  variant,\n  spacingBottom,\n  spacingTop,\n}: Props): JSX.Element => {\n  return (\n    <StyledWrapper spacingBottom={spacingBottom} spacingTop={spacingTop}>\n      <StyledLine color={variant} />\n      <StyledText color={variant}>{text}</StyledText>\n      <StyledLine color={variant} />\n    </StyledWrapper>\n  );\n};\n","import { useQuery, UseQueryOptions } from \"@tanstack/react-query\";\nimport { apiGet } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { ICollaborantDTO } from \"linked-models/collaboration/collaboration.dto\";\nimport { URL_COLLABORANTS } from \"linked-models/collaboration/collaboration.urls\";\nimport { URL_USERS } from \"linked-models/user/user.urls\";\n\nexport const useGetUserCollaborantsQuery = (\n  options?: Omit<UseQueryOptions<ICollaborantDTO[]>, \"queryFn\">\n) => {\n  const getUserCollaborants = async () => {\n    return await apiGet<ICollaborantDTO[]>(\n      FRONTIFY_URL(URL_USERS + URL_COLLABORANTS)\n    ).then((res) => res.data);\n  };\n\n  return useQuery([URL_USERS + URL_COLLABORANTS], getUserCollaborants, options);\n};\n","import { Autocomplete, Chip, styled } from \"@mui/material\";\n\nexport const StyledAutocompleteChip = styled(Chip)(({ theme }) => ({\n  zIndex: 1,\n  backgroundColor: theme.palette.primary.main,\n  color: theme.palette.secondary.contrastText,\n  margin: \"0 2px\",\n}));\n\nexport const StyledAutocomplete = styled(\n  Autocomplete<string, true, false, true>\n)({\n  \"& .MuiFormControl-root\": {\n    height: \"unset\",\n  },\n});\n","import { AutocompleteProps } from \"@mui/material\";\nimport { TextField } from \"atomicComponents/atoms/TextField\";\nimport { useCurrentUser } from \"framework/authentication/useCurrentUser\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { CollaborationState } from \"linked-models/collaboration/collaboration.enum\";\nimport { IUserPublicDataDTO } from \"linked-models/user/user.dto\";\nimport { memo, useMemo } from \"react\";\nimport { useFormContext, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useGetUserCollaborantsQuery } from \"../../CollaborantsDrawer/queries/getUserCollaborants.query.\";\nimport { IReminderDialogState } from \"../models/reminderDialogState.model\";\nimport { StyledAutocomplete, StyledAutocompleteChip } from \"./styles\";\n\ninterface Props\n  extends Omit<\n    AutocompleteProps<string, true, false, true, \"div\">,\n    \"renderInput\" | \"options\"\n  > {\n  name: \"assignedOwners\" | \"assignedUsers\";\n  defaultValues: IUserPublicDataDTO[];\n}\n\nconst CollaborantAutocomplete = ({\n  name,\n  defaultValues,\n  ...autocompleteProps\n}: Props): JSX.Element => {\n  const { t } = useTranslation();\n  const watch = useWatch<IReminderDialogState>();\n  const { setValue } = useFormContext();\n  const currentWatchValue = watch[name];\n  const { currentUser } = useCurrentUser();\n  const userCollaborantsQuery = useGetUserCollaborantsQuery();\n\n  const collaborantsEmails = useMemo(() => {\n    const emails = new Set<string>();\n    userCollaborantsQuery.data?.forEach((col) => {\n      if (col.state === CollaborationState.Accepted) {\n        emails.add(col.creator.email);\n        emails.add(col.user.email);\n      }\n    });\n\n    return Array.from(emails);\n  }, [userCollaborantsQuery.data]);\n\n  const allUserEmails = useMemo(() => {\n    return Array.from(\n      new Set([...collaborantsEmails, ...defaultValues.map((u) => u.email)])\n    );\n  }, [collaborantsEmails, defaultValues]);\n\n  const userEmailToPublicDataMap = useMemo(() => {\n    const userEmailToPublicDataMap = new Map<string, IUserPublicDataDTO>();\n    userCollaborantsQuery.data?.forEach((col) => {\n      if (col.state === CollaborationState.Accepted) {\n        userEmailToPublicDataMap.set(col.creator.email, col.creator);\n        userEmailToPublicDataMap.set(col.user.email, col.user);\n      }\n    });\n    defaultValues.forEach((u) => {\n      userEmailToPublicDataMap.set(u.email, u);\n    });\n\n    return userEmailToPublicDataMap;\n  }, [defaultValues, userCollaborantsQuery.data]);\n\n  const selectedEmails = currentWatchValue?.map((u) => u.email);\n\n  return (\n    <StyledAutocomplete\n      {...autocompleteProps}\n      renderTags={() => {\n        return currentWatchValue?.map((value, index) => {\n          return (\n            <StyledAutocompleteChip\n              key={index}\n              label={value.email}\n              disabled={\n                value.email === currentUser?.email ||\n                !!(value.email && !collaborantsEmails.includes(value.email))\n              }\n              onDelete={() => {\n                const prevValue = currentWatchValue;\n                const newValue = prevValue?.filter((v) => v !== value);\n                setValue(name, newValue);\n              }}\n            />\n          );\n        });\n      }}\n      multiple\n      options={allUserEmails.filter((e) => !selectedEmails?.includes(e))}\n      onChange={(_, value) => {\n        const userValue: IUserPublicDataDTO[] = [];\n        value.forEach((email) => {\n          const userData = userEmailToPublicDataMap.get(email);\n\n          if (userData) {\n            userValue.push(userData);\n          }\n        });\n        setValue(name, userValue);\n      }}\n      defaultValue={defaultValues.map((u) => u.email)}\n      renderInput={(params) => {\n        return <TextField {...params} InputLabelProps={undefined} />;\n      }}\n      noOptionsText={t(TranslationKeys.NoCollaborantOption)}\n    />\n  );\n};\n\nexport default memo(CollaborantAutocomplete);\n","import { Typography } from \"@mui/material\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { memo } from \"react\";\nimport { useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { IReminderDialog } from \"../models/reminderDialog.model\";\n\nconst DatesInfo = (): JSX.Element => {\n  const watch = useWatch<IReminderDialog>();\n  const { t } = useTranslation();\n\n  const startDate = watch[\"startDate\"];\n  const finishDate = watch[\"finishDate\"];\n\n  const options: Intl.DateTimeFormatOptions = {\n    year: \"numeric\",\n    month: \"numeric\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n\n  return (\n    <>\n      {startDate && (\n        <Typography sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <span>{t(TranslationKeys.StartDate)}:</span>\n          <strong style={{ fontWeight: 800 }}>\n            {new Date(startDate).toLocaleString(\"pl-PL\", options)}\n          </strong>\n        </Typography>\n      )}\n      {finishDate && (\n        <Typography sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <span>{t(TranslationKeys.FinishDate)}:</span>\n          <strong style={{ fontWeight: 800 }}>\n            {new Date(finishDate).toLocaleString(\"pl-PL\", options)}\n          </strong>\n        </Typography>\n      )}\n    </>\n  );\n};\n\nexport default memo(DatesInfo);\n","import EditCalendarIcon from \"@mui/icons-material/EditCalendar\";\nimport { ListItemIcon, ListItemText, MenuItem } from \"@mui/material\";\nimport { Select } from \"atomicComponents/atoms/Select\";\nimport { Separator } from \"atomicComponents/atoms/Separator\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport TodoListIcon from \"pages/TodoListsPage/components/TodoListIcon\";\nimport { useGetUserTodoListsQuery } from \"pages/TodoListsPage/queries/getUserTodoLists.query\";\nimport { memo, useMemo } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport IconPicker from \"../../TodoListDialog/IconPicker\";\nimport { StyledInlineInputs } from \"../../TodoListDialog/styles\";\n\nconst TodoListSelect = (): JSX.Element => {\n  const getUserTodoListsWithMembersQuery = useGetUserTodoListsQuery(true);\n  const { t } = useTranslation();\n\n  const todoListIdToNameAndMembersMap = useMemo(() => {\n    const map = new Map<string, { name: string; members: string }>();\n    getUserTodoListsWithMembersQuery.data?.forEach((todoList) => {\n      map.set(todoList.id, {\n        name: todoList.name,\n        members: Array.from(\n          new Set([\n            ...todoList.assignedOwners.map((o) => o.displayName),\n            ...todoList.assignedUsers.map((u) => u.displayName),\n          ])\n        ).join(\", \"),\n      });\n    });\n    return map;\n  }, [getUserTodoListsWithMembersQuery.data]);\n\n  return (\n    <>\n      <Separator text={t(TranslationKeys.ScopeChoose)} spacingBottom={15} />\n      <Controller\n        name={\"todoListId\"}\n        render={({ field: { onChange, value } }) => (\n          <StyledInlineInputs style={{ height: \"54px\" }}>\n            {!value || (value === \"reminder\" && <IconPicker />)}\n            <Select\n              label={t(TranslationKeys.Reminder)}\n              value={value}\n              renderValue={(value) =>\n                todoListIdToNameAndMembersMap.get(value as string)?.name ||\n                t(TranslationKeys.Reminder)\n              }\n              onChange={(e) => {\n                onChange(e.target?.value);\n              }}\n            >\n              <MenuItem value={\"reminder\"} key={\"reminder\"}>\n                <ListItemIcon>\n                  {<EditCalendarIcon color=\"secondary\" />}\n                </ListItemIcon>\n                <ListItemText\n                  secondaryTypographyProps={{\n                    style: {\n                      whiteSpace: \"normal\",\n                    },\n                  }}\n                  primary={t(TranslationKeys.Reminder)}\n                  secondary={t(TranslationKeys.ReminderInfo)}\n                />\n              </MenuItem>\n              <Separator text={t(TranslationKeys.OrChooseTodoList)} />\n              {getUserTodoListsWithMembersQuery.data?.map((todoList) => (\n                <MenuItem value={todoList.id} key={todoList.id}>\n                  <ListItemIcon>\n                    {<TodoListIcon type={todoList.icon} />}\n                  </ListItemIcon>\n                  <ListItemText\n                    primaryTypographyProps={{\n                      style: {\n                        whiteSpace: \"nowrap\",\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                      },\n                    }}\n                    secondaryTypographyProps={{\n                      style: {\n                        whiteSpace: \"normal\",\n                      },\n                    }}\n                    primary={todoList.name}\n                    secondary={\n                      todoListIdToNameAndMembersMap.get(todoList.id)?.members ||\n                      \"\"\n                    }\n                  />\n                </MenuItem>\n              )) ?? []}\n            </Select>\n          </StyledInlineInputs>\n        )}\n      />\n    </>\n  );\n};\n\nexport default memo(TodoListSelect);\n","import { useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { apiGet } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { ITodoListWithMembersDto } from \"linked-models/todoList/todoList.dto\";\nimport { ITodoListAttached } from \"linked-models/todoList/todoList.model\";\nimport {\n  PARAM_WITH_MEMBERS,\n  URL_TODO_LISTS,\n} from \"linked-models/todoList/todoList.urls\";\n\nexport const useGetUserTodoListsQuery = <T extends boolean>(\n  withMembers?: T\n): UseQueryResult<\n  T extends true ? ITodoListWithMembersDto[] : ITodoListAttached[],\n  string\n> => {\n  const getTodoLists = async () => {\n    return await apiGet<ITodoListAttached[]>(\n      FRONTIFY_URL(\n        URL_TODO_LISTS,\n        \"\",\n        withMembers\n          ? {\n              [PARAM_WITH_MEMBERS]: \"true\",\n            }\n          : undefined\n      )\n    ).then((res) => res.data);\n  };\n\n  return useQuery(\n    [URL_TODO_LISTS, withMembers ? PARAM_WITH_MEMBERS : \"\"],\n    getTodoLists\n  );\n};\n","import dayjs from \"dayjs\";\nimport { TodoListIconEnum } from \"linked-models/todoList/todoList.enum\";\nimport { createNotifySelectParams } from \"../../TaskDialog/components/NotifyForm/helpers\";\nimport { IReminderDialogState } from \"../models/reminderDialogState.model\";\n\nconst useCreateDefaultReminderDialogData = (\n  defaultData?: Partial<IReminderDialogState>,\n  editReminderData?: IReminderDialogState\n) => {\n  const defaultStartDate =\n    defaultData?.startDate ?? editReminderData?.startDate;\n  const notifyDateFromArgs =\n    defaultData?.notifyDate ?? editReminderData?.notifyDate;\n  // if notifyDate wasn't passed, we set it to 15 mins before startDate as default\n  const defaultNotifyDate = notifyDateFromArgs\n    ? new Date(notifyDateFromArgs)\n    : defaultStartDate\n    ? new Date(new Date(defaultStartDate).getTime() - 900000)\n    : null;\n\n  const defaultFinishDate =\n    defaultData?.finishDate ?? editReminderData?.finishDate;\n\n  const defaultNotifySelectsValues = !!defaultNotifyDate\n    ? createNotifySelectParams(\n        new Date(defaultNotifyDate),\n        defaultStartDate && new Date(defaultStartDate),\n        defaultFinishDate && new Date(defaultFinishDate)\n      )\n    : null;\n\n  return {\n    text: defaultData?.text || editReminderData?.text || \"\",\n    name: defaultData?.name || editReminderData?.name || \"\",\n    icon:\n      defaultData?.icon || editReminderData?.icon || TodoListIconEnum.Reminder,\n    startDate:\n      defaultData?.startDate || editReminderData?.startDate || dayjs().toDate(),\n    finishDate:\n      defaultData?.finishDate ||\n      editReminderData?.finishDate ||\n      dayjs().add(1, \"hour\").toDate(),\n    assignedOwners:\n      defaultData?.assignedOwners || editReminderData?.assignedOwners || [],\n    assignedUsers:\n      defaultData?.assignedUsers || editReminderData?.assignedUsers || [],\n    todoListId:\n      defaultData?.todoListId || editReminderData?.todoListId || \"reminder\",\n    notify: !!notifyDateFromArgs,\n    minsAccordingToTimePoint:\n      defaultNotifySelectsValues?.minsAccordingToTimePoint || 15,\n    beforeOrAfter: defaultNotifySelectsValues?.beforeOrAfter || \"Before\",\n    timePoint: defaultNotifySelectsValues?.timePoint || \"Start\",\n    notifyDate: defaultNotifyDate,\n  };\n};\n\nexport default useCreateDefaultReminderDialogData;\n","import HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\nimport { styled } from \"@mui/material\";\n\nexport const StyledHelpOutlineIcon = styled(HelpOutlineIcon)({\n  transform: \"translateY(-4px)\",\n  marginRight: \"3px\",\n});\n","import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport FlagCircleIcon from \"@mui/icons-material/FlagCircle\";\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\nimport PlayCircleOutlineIcon from \"@mui/icons-material/PlayCircleOutline\";\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { StyledAccordion } from \"atomicComponents/atoms/Accordion/styles\";\nimport { Button } from \"atomicComponents/atoms/Button\";\nimport Dialog from \"atomicComponents/atoms/Dialog\";\nimport { Separator } from \"atomicComponents/atoms/Separator\";\nimport { ControlledCheckbox } from \"atomicComponents/molecules/ControlledCheckbox\";\nimport { ControlledTextField } from \"atomicComponents/molecules/ControlledInputText\";\nimport dayjs from \"dayjs\";\nimport { useDialogs } from \"framework/dialogs\";\nimport useAppDialogState from \"framework/dialogs/hooks/useAppDialogState\";\nimport { initialTaskDialog } from \"framework/dialogs/models/initialState.const\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { IReminder } from \"linked-models/reminder/reminder.dto\";\nimport { useCreateReminderMutation } from \"pages/RemindersPage/mutations/createReminder/createReminder.mutation\";\nimport { useEditReminderMutation } from \"pages/RemindersPage/mutations/editReminder/editReminder.mutation\";\nimport { memo, useState } from \"react\";\nimport { Control, FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport DateTimePickerWithIcon from \"../TaskDialog/components/DatePickerWithIcon\";\nimport NotifyForm from \"../TaskDialog/components/NotifyForm\";\nimport { ITaskDialog } from \"../TaskDialog/models/taskDialog.model\";\nimport { StyledForm } from \"../TodoListDialog/styles\";\nimport CollaborantAutocomplete from \"./components/CollaborantAutocomplete\";\nimport DatesInfo from \"./components/DatesInfo\";\nimport TodoListSelect from \"./components/TodoListSelect\";\nimport useCreateDefaultReminderDialogData from \"./hooks/useCreateDefaultReminderDialogData\";\nimport { IReminderDialog } from \"./models/reminderDialog.model\";\nimport { IReminderDialogState } from \"./models/reminderDialogState.model\";\nimport { StyledHelpOutlineIcon } from \"./styles\";\n\nconst ReminderDialog = (): JSX.Element => {\n  const {\n    dialogsState: {\n      reminderDialog: { editReminderData, visible, defaultData },\n    },\n    dialogsActions: { updateReminderDialog },\n  } = useDialogs();\n  const createReminderMutation = useCreateReminderMutation();\n  const editReminderMutation = useEditReminderMutation();\n  const { t } = useTranslation();\n  const [open, onClose] = useAppDialogState(visible, () =>\n    updateReminderDialog(initialTaskDialog)\n  );\n  const [expandedAccordion, setExpandedAccordion] = useState(\"general\");\n\n  const handleAccordionChange = (panel: string) => () => {\n    if (expandedAccordion === panel) setExpandedAccordion(\"\");\n    else {\n      setExpandedAccordion(panel);\n    }\n  };\n\n  const defaultFormValues = useCreateDefaultReminderDialogData(\n    defaultData,\n    editReminderData\n  );\n\n  const methods = useForm<IReminderDialog>({\n    defaultValues: defaultFormValues,\n  });\n\n  const onSubmit = (data: IReminderDialogState) => {\n    const ownerEmails = data.assignedOwners.map((owner) => owner.email);\n    const userEmails = data.assignedUsers.map((user) => user.email);\n\n    if (editReminderData) {\n      editReminderMutation.mutate({\n        todoListId: editReminderData.todoListId,\n        taskId: editReminderData.taskId,\n        data: {\n          ...data,\n          assignedOwners: ownerEmails,\n          assignedUsers: userEmails,\n        },\n      });\n    } else {\n      if (!data.startDate || !data.finishDate || !data.text || !data.icon)\n        return;\n      const createReminderData: IReminder = {\n        ...data,\n        assignedOwners: ownerEmails,\n        assignedUsers: userEmails,\n        text: data.text,\n        name: data.text,\n        icon: data.icon,\n        startDate: data.startDate,\n        finishDate: data.finishDate,\n      };\n      createReminderMutation.mutate(createReminderData);\n    }\n\n    updateReminderDialog(initialTaskDialog);\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <FormProvider {...methods}>\n        <StyledAccordion\n          expanded={expandedAccordion === \"general\"}\n          onChange={handleAccordionChange(\"general\")}\n          disableGutters\n        >\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            <Tooltip title={t(TranslationKeys.GeneralInfoReminderDescription)}>\n              <div>\n                <HelpOutlineIcon sx={{ marginRight: \"3px\" }} />\n              </div>\n            </Tooltip>\n            <Typography>{t(TranslationKeys.GeneralInfo)}</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <StyledForm onSubmit={methods.handleSubmit(onSubmit)}>\n              <Separator\n                text={\n                  editReminderData\n                    ? `${t(TranslationKeys.EditReminder)}: ${\n                        editReminderData.text\n                      }`\n                    : t(TranslationKeys.CreateReminder)\n                }\n                spacingBottom={15}\n                spacingTop={-5}\n              />\n              <ControlledTextField\n                name={\"name\"}\n                required\n                control={methods.control}\n                placeholder={t(TranslationKeys.ReminderName)}\n              />\n\n              <ControlledTextField\n                name={\"text\"}\n                required\n                control={methods.control}\n                placeholder={t(TranslationKeys.ReminderDescription)}\n              />\n              {[\n                {\n                  Icon: <PlayCircleOutlineIcon />,\n                  tooltipTitle: t(TranslationKeys.StartDate),\n                  name: \"startDate\" as keyof IReminder,\n                  required: true,\n                  control: methods.control,\n                  maxDate: dayjs(methods.getValues(\"startDate\")),\n                },\n                {\n                  Icon: <FlagCircleIcon />,\n                  tooltipTitle: t(TranslationKeys.FinishDate),\n                  name: \"finishDate\" as keyof IReminder,\n                  required: true,\n                  control: methods.control,\n                  minDate: dayjs(methods.getValues(\"finishDate\")),\n                },\n              ].map((props, index) => (\n                <DateTimePickerWithIcon key={index} {...props} />\n              ))}\n            </StyledForm>\n          </AccordionDetails>\n        </StyledAccordion>\n        {!editReminderData && (\n          <StyledAccordion\n            expanded={expandedAccordion === \"scope\"}\n            onChange={handleAccordionChange(\"scope\")}\n            disableGutters\n          >\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n              <Tooltip title={t(TranslationKeys.ScopeDescription)}>\n                <div>\n                  <StyledHelpOutlineIcon />\n                </div>\n              </Tooltip>\n              {t(TranslationKeys.ScopeChoose)}\n            </AccordionSummary>\n            <AccordionDetails>\n              <TodoListSelect />\n            </AccordionDetails>\n          </StyledAccordion>\n        )}\n        <StyledAccordion\n          expanded={expandedAccordion === \"access\"}\n          onChange={handleAccordionChange(\"access\")}\n          disableGutters\n        >\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            <Tooltip title={t(TranslationKeys.ManageAccessReminderDescription)}>\n              <div>\n                <StyledHelpOutlineIcon />\n              </div>\n            </Tooltip>\n            {t(TranslationKeys.ManageAccess)}\n          </AccordionSummary>\n          <AccordionDetails>\n            <StyledForm>\n              <Separator\n                text={t(TranslationKeys.ManageAccess)}\n                spacingBottom={-5}\n                spacingTop={-5}\n              />\n              <Typography>{t(TranslationKeys.CurrentOwners)}</Typography>\n              <CollaborantAutocomplete\n                name=\"assignedOwners\"\n                defaultValues={defaultFormValues?.assignedOwners}\n              />\n              <Typography>{t(TranslationKeys.CurrentUsers)}</Typography>\n              <CollaborantAutocomplete\n                name=\"assignedUsers\"\n                defaultValues={defaultFormValues?.assignedUsers}\n              />\n            </StyledForm>\n          </AccordionDetails>\n        </StyledAccordion>\n        <StyledAccordion\n          expanded={expandedAccordion === \"notify\"}\n          onChange={handleAccordionChange(\"notify\")}\n          disableGutters\n        >\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            <Tooltip title={t(TranslationKeys.SetNotificationDescription)}>\n              <div>\n                <StyledHelpOutlineIcon />\n              </div>\n            </Tooltip>\n            {t(TranslationKeys.SetNotification)}\n          </AccordionSummary>\n          <AccordionDetails>\n            <StyledForm>\n              <Separator\n                text={t(TranslationKeys.SetNotification)}\n                spacingBottom={5}\n                spacingTop={-5}\n              />\n              <DatesInfo />\n              <ControlledCheckbox\n                name={\"notify\"}\n                control={methods.control}\n                label={t(TranslationKeys.NotifyMe)}\n              />\n              <NotifyForm\n                control={\n                  methods.control as unknown as Control<ITaskDialog, any>\n                }\n              />\n            </StyledForm>\n          </AccordionDetails>\n        </StyledAccordion>\n        <Button\n          onClick={methods.handleSubmit(onSubmit)}\n          sx={{ margin: \"0 auto\" }}\n        >\n          {editReminderData\n            ? t(TranslationKeys.Save)\n            : t(TranslationKeys.CreateReminder)}\n        </Button>\n      </FormProvider>\n    </Dialog>\n  );\n};\n\nexport default memo(ReminderDialog);\n","import { useMutation } from \"@tanstack/react-query\";\nimport { apiPost } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { IReminder, IReminderDTO } from \"linked-models/reminder/reminder.dto\";\nimport { IReminderAttached } from \"linked-models/reminder/reminder.model\";\nimport { URL_REMINDERS } from \"linked-models/reminder/reminder.urls\";\nimport { stringifyTaskDateFields } from \"linked-models/task/task.dto\";\nimport useUpdateQueriesAfterCreatingReminder from \"./useUpdateQueriesAfterCreatingReminder\";\n\nexport const useCreateReminderMutation = () => {\n  const updateQueriesAfterCreatingReminder =\n    useUpdateQueriesAfterCreatingReminder();\n\n  const createReminder = async (data: IReminder) => {\n    const url = FRONTIFY_URL(URL_REMINDERS);\n    return apiPost<IReminderDTO, IReminderAttached>(\n      url,\n      stringifyTaskDateFields(data)\n    ).then((res) => res.data);\n  };\n\n  return useMutation(createReminder, {\n    onSuccess: updateQueriesAfterCreatingReminder,\n  });\n};\n","import { Popover, styled } from \"@mui/material\";\n\nexport const StyledIconPickerWrapper = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  gap: \"10px\",\n  padding: 10,\n  borderRadius: 10,\n  background: theme.palette.primary.main,\n}));\n\nexport const StyledPopover = styled(Popover)(({ theme }) => ({\n  \"& .MuiPopover-paper\": {\n    borderRadius: 10,\n    background: theme.palette.primary.main,\n  },\n}));\n","import { IconButton } from \"@mui/material\";\nimport { TodoListIconEnum } from \"linked-models/todoList/todoList.enum\";\nimport TodoListIcon from \"pages/TodoListsPage/components/TodoListIcon\";\nimport { memo, useState } from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport { StyledIconPickerWrapper, StyledPopover } from \"./styles\";\n\nconst IconPicker = () => {\n  const [iconPickerAnchorEl, setIconPickerAnchorEl] =\n    useState<HTMLButtonElement | null>(null);\n  const { setValue, getValues } = useFormContext();\n  const handleClose = () => setIconPickerAnchorEl(null);\n\n  return (\n    <div>\n      <IconButton\n        onClick={(event: React.MouseEvent<HTMLButtonElement>) => {\n          setIconPickerAnchorEl(event.currentTarget);\n        }}\n      >\n        <TodoListIcon type={getValues(\"icon\")} />\n      </IconButton>\n      <StyledPopover\n        open={Boolean(iconPickerAnchorEl)}\n        anchorEl={iconPickerAnchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n      >\n        <StyledIconPickerWrapper>\n          {Object.values(TodoListIconEnum).map((iconType) => {\n            return (\n              <TodoListIcon\n                key={iconType}\n                type={iconType}\n                onClick={() => {\n                  setValue(\"icon\", iconType);\n                  handleClose();\n                }}\n              />\n            );\n          })}\n        </StyledIconPickerWrapper>\n      </StyledPopover>\n    </div>\n  );\n};\n\nexport default memo(IconPicker);\n","import { useMutation } from \"@tanstack/react-query\";\nimport { apiPut } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { IReminder, IReminderDTO } from \"linked-models/reminder/reminder.dto\";\nimport { IReminderAttached } from \"linked-models/reminder/reminder.model\";\nimport { URL_REMINDERS } from \"linked-models/reminder/reminder.urls\";\nimport { stringifyTaskDateFields } from \"linked-models/task/task.dto\";\nimport { URL_TASK } from \"linked-models/task/task.urls\";\nimport {\n  URL_TODO_LIST,\n  URL_TODO_LISTS,\n} from \"linked-models/todoList/todoList.urls\";\nimport useUpdateQueriesAfterEditingReminder from \"./useUpdateQueriesAfterEditingReminder\";\n\nexport const useEditReminderMutation = () => {\n  const updateQueriesAfterEditingReminder =\n    useUpdateQueriesAfterEditingReminder();\n\n  const editReminderInTodoList = async ({\n    todoListId,\n    taskId,\n    data,\n  }: {\n    todoListId: string;\n    taskId: string;\n    data: Partial<IReminder>;\n  }) => {\n    return apiPut<Partial<IReminderDTO>, IReminderAttached>(\n      FRONTIFY_URL(\n        URL_TODO_LISTS +\n          URL_TODO_LIST(todoListId) +\n          URL_REMINDERS +\n          URL_TASK(taskId)\n      ),\n      stringifyTaskDateFields(data)\n    ).then((res) => res.data);\n  };\n\n  return useMutation(editReminderInTodoList, {\n    onSuccess: updateQueriesAfterEditingReminder,\n  });\n};\n","export enum CollaborationState {\n  /** The collaboration is pending - user has not accepted or rejected it yet */\n  Pending = \"PENDING\",\n  /** The collaboration is accepted */\n  Accepted = \"ACCEPTED\",\n  /** The collaboration was rejected for the first time */\n  Rejected = \"REJECTED\",\n  /** The collaboration request was rejected and then re-opened */\n  ReOpened = \"REOPENED\",\n  /** User has blocked the collaboration with other user or rejected it for the second time */\n  Blocked = \"BLOCKED\",\n}\n","export const URL_COLLABORANTS = `/collaborants`;\n\nexport const COLLABORATION_PARAM = \"collaborationId\";\n\nexport const URL_COLLABORATION = (collaborationId?: string) =>\n  `/${collaborationId || \":\" + COLLABORATION_PARAM}`;\n\nexport const URL_INVITE_COLLABORANT = `/inviteCollaborant`;\nexport const URL_REJECT = `/reject`;\nexport const URL_ACCEPT = `/accept`;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 22H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2v6h-2v-2H5v10h7v2zm10.13-5.01.71-.71c.39-.39.39-1.02 0-1.41l-.71-.71a.9959.9959 0 0 0-1.41 0l-.71.71 2.12 2.12zm-.71.71-5.3 5.3H14v-2.12l5.3-5.3 2.12 2.12z\"\n}), 'EditCalendar');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n}), 'HelpOutline');\nexports.default = _default;"],"names":["StyledWrapper","styled","shouldForwardProp","prop","_ref","display","alignItems","width","height","marginTop","spacingTop","marginBottom","spacingBottom","StyledLine","_ref2","theme","color","flexGrow","borderBottom","concat","palette","primary","contrastText","borderColor","StyledText","_ref3","paddingLeft","paddingRight","Separator","text","variant","_jsxs","children","_jsx","useGetUserCollaborantsQuery","options","getUserCollaborants","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","apiGet","FRONTIFY_URL","URL_USERS","URL_COLLABORANTS","then","res","data","abrupt","sent","stop","apply","arguments","useQuery","StyledAutocompleteChip","Chip","zIndex","backgroundColor","main","secondary","margin","StyledAutocomplete","Autocomplete","CollaborantAutocomplete","name","defaultValues","autocompleteProps","_objectWithoutProperties","_excluded","t","useTranslation","watch","useWatch","setValue","useFormContext","currentWatchValue","currentUser","useCurrentUser","userCollaborantsQuery","collaborantsEmails","useMemo","_userCollaborantsQuer","emails","Set","forEach","col","state","CollaborationState","Accepted","add","creator","email","user","Array","from","allUserEmails","_toConsumableArray","map","u","userEmailToPublicDataMap","_userCollaborantsQuer2","Map","set","selectedEmails","_objectSpread","renderTags","value","index","label","disabled","includes","onDelete","newValue","filter","v","multiple","e","onChange","_","userValue","userData","get","push","defaultValue","renderInput","params","TextField","InputLabelProps","undefined","noOptionsText","TranslationKeys","NoCollaborantOption","memo","DatesInfo","startDate","finishDate","year","month","day","hour","minute","_Fragment","Typography","sx","justifyContent","StartDate","style","fontWeight","Date","toLocaleString","FinishDate","TodoListSelect","getUserTodoListsWithMembersQuery","withMembers","getTodoLists","URL_TODO_LISTS","_defineProperty","PARAM_WITH_MEMBERS","useGetUserTodoListsQuery","todoListIdToNameAndMembersMap","_getUserTodoListsWith","todoList","id","members","assignedOwners","o","displayName","assignedUsers","join","ScopeChoose","Controller","render","_getUserTodoListsWith2","_getUserTodoListsWith3","_ref$field","field","StyledInlineInputs","IconPicker","Select","Reminder","renderValue","_todoListIdToNameAndM","_e$target","target","MenuItem","ListItemIcon","EditCalendarIcon","ListItemText","secondaryTypographyProps","whiteSpace","ReminderInfo","OrChooseTodoList","_todoListIdToNameAndM2","TodoListIcon","type","icon","primaryTypographyProps","overflow","textOverflow","defaultData","editReminderData","_defaultData$startDat","_defaultData$notifyDa","_defaultData$finishDa","defaultStartDate","notifyDateFromArgs","notifyDate","defaultNotifyDate","getTime","defaultFinishDate","defaultNotifySelectsValues","createNotifySelectParams","TodoListIconEnum","dayjs","toDate","todoListId","notify","minsAccordingToTimePoint","beforeOrAfter","timePoint","StyledHelpOutlineIcon","HelpOutlineIcon","transform","marginRight","ReminderDialog","_useDialogs","useDialogs","_useDialogs$dialogsSt","dialogsState","reminderDialog","visible","updateReminderDialog","dialogsActions","createReminderMutation","updateQueriesAfterCreatingReminder","useUpdateQueriesAfterCreatingReminder","createReminder","url","URL_REMINDERS","apiPost","stringifyTaskDateFields","_x","useMutation","onSuccess","useCreateReminderMutation","editReminderMutation","useEditReminderMutation","_useAppDialogState","useAppDialogState","initialTaskDialog","_useAppDialogState2","_slicedToArray","open","onClose","_useState","useState","_useState2","expandedAccordion","setExpandedAccordion","handleAccordionChange","panel","defaultFormValues","useCreateDefaultReminderDialogData","methods","useForm","onSubmit","ownerEmails","owner","userEmails","mutate","taskId","createReminderData","Dialog","FormProvider","StyledAccordion","expanded","disableGutters","AccordionSummary","expandIcon","ExpandMoreIcon","Tooltip","title","GeneralInfoReminderDescription","GeneralInfo","AccordionDetails","StyledForm","handleSubmit","EditReminder","CreateReminder","ControlledTextField","required","control","placeholder","ReminderName","ReminderDescription","Icon","PlayCircleOutlineIcon","tooltipTitle","maxDate","getValues","FlagCircleIcon","minDate","props","DateTimePickerWithIcon","ScopeDescription","ManageAccessReminderDescription","ManageAccess","CurrentOwners","CurrentUsers","SetNotificationDescription","SetNotification","ControlledCheckbox","NotifyMe","NotifyForm","Button","onClick","Save","StyledIconPickerWrapper","flexWrap","gap","padding","borderRadius","background","StyledPopover","Popover","iconPickerAnchorEl","setIconPickerAnchorEl","_useFormContext","handleClose","IconButton","event","currentTarget","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Object","values","iconType","updateQueriesAfterEditingReminder","useUpdateQueriesAfterEditingReminder","editReminderInTodoList","apiPut","URL_TODO_LIST","URL_TASK","URL_COLLABORATION","collaborationId","URL_INVITE_COLLABORANT","URL_REJECT","URL_ACCEPT","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
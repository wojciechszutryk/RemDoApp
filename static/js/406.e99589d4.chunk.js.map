{"version":3,"file":"static/js/406.e99589d4.chunk.js","mappings":"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","sources":["atomicComponents/atoms/Dialog/styles.ts","atomicComponents/atoms/Dialog/index.tsx","framework/dialogs/components/CollaborantsDrawer/queries/getUserCollaborants.query..ts","framework/dialogs/components/ReminderDialog/components/styles.ts","framework/dialogs/components/ReminderDialog/components/CollaborantAutocomplete.tsx","framework/dialogs/components/ShareTodoListDialog/index.tsx","framework/dialogs/components/TodoListDialog/styles.ts","framework/dialogs/hooks/useAppDialogState.ts","pages/SingleTodoListPage/mutations/editTodoList/editTodoList.mutation.ts","../../models/collaboration/collaboration.enum.ts","../../models/collaboration/collaboration.urls.ts"],"sourcesContent":["import { IconButton, Dialog as MuiDialog, styled } from \"@mui/material\";\n\nexport const StyledInnerWrapper = styled(\"div\")(({ theme }) => ({\n  backgroundColor: theme.palette.primary.light,\n  padding: 10,\n  height: \"100vh\",\n  borderRadius: \"20px\",\n\n  [theme.breakpoints.up(\"sm\")]: {\n    height: \"auto\",\n    padding: \"55px\",\n    borderRadius: \"200px\",\n  },\n}));\n\nexport const StyledCloseButton = styled(IconButton)(({ theme }) => ({\n  position: \"absolute\",\n  backgroundColor: theme.palette.primary.main,\n  borderRadius: \"150px 200px 130px 170px\",\n  top: 0,\n  right: 2,\n  width: 30,\n  height: 30,\n  transition: \"0.3s\",\n  \"&:hover\": {\n    backgroundColor: theme.palette.primary.main,\n    opacity: 0.8,\n  },\n  [theme.breakpoints.up(\"sm\")]: {\n    top: -19,\n    right: 2,\n  },\n}));\n\nexport const StyledDialog = styled(MuiDialog)(({ theme }) => ({\n  \".MuiDialog-root\": {\n    padding: \"0px\",\n  },\n  \".MuiDialog-container\": {\n    padding: \"0px\",\n  },\n  \".MuiDialog-paper\": {\n    position: \"absolute\",\n    top: 0,\n    overflow: \"visible\",\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    boxSizing: \"border-box\",\n    width: \"100%\",\n    minHeight: \"100vh\",\n    margin: \"0px\",\n    maxWidth: \"none\",\n    padding: \"10px\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n      top: \"50%\",\n      width: `518px`,\n      minHeight: \"fit-content\",\n      borderRadius: \"200px 210px 200px 155px\",\n      transform: \"rotate(5deg) translateY(-50%)\",\n      \"& > *\": {\n        transform: \"rotate(-5deg)\",\n      },\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      height: \"auto\",\n      width: `573px`,\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      width: `618px`,\n    },\n    [theme.breakpoints.up(\"xl\")]: {\n      height: \"fit-content\",\n      width: `750px`,\n    },\n  },\n}));\n","import CloseIcon from \"@mui/icons-material/Close\";\nimport { DialogProps, Slide } from \"@mui/material\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport { forwardRef, memo } from \"react\";\nimport { StyledCloseButton, StyledDialog, StyledInnerWrapper } from \"./styles\";\n\nconst Transition = forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"down\" ref={ref} in={true} {...props} />;\n});\n\nconst Dialog = ({ children, ...props }: DialogProps): JSX.Element => {\n  return (\n    <StyledDialog {...props} TransitionComponent={Transition} keepMounted>\n      <StyledInnerWrapper>{children}</StyledInnerWrapper>\n\n      {props.onClose && (\n        <StyledCloseButton onClick={(e) => props.onClose?.(e, \"backdropClick\")}>\n          <CloseIcon />\n        </StyledCloseButton>\n      )}\n    </StyledDialog>\n  );\n};\n\nexport default memo(Dialog);\n","import { useQuery, UseQueryOptions } from \"@tanstack/react-query\";\nimport { apiGet } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { ICollaborantDTO } from \"linked-models/collaboration/collaboration.dto\";\nimport { URL_COLLABORANTS } from \"linked-models/collaboration/collaboration.urls\";\nimport { URL_USERS } from \"linked-models/user/user.urls\";\n\nexport const useGetUserCollaborantsQuery = (\n  options?: Omit<UseQueryOptions<ICollaborantDTO[]>, \"queryFn\">\n) => {\n  const getUserCollaborants = async () => {\n    return await apiGet<ICollaborantDTO[]>(\n      FRONTIFY_URL(URL_USERS + URL_COLLABORANTS)\n    ).then((res) => res.data);\n  };\n\n  return useQuery([URL_USERS + URL_COLLABORANTS], getUserCollaborants, options);\n};\n","import { Autocomplete, Chip, styled } from \"@mui/material\";\n\nexport const StyledAutocompleteChip = styled(Chip)(({ theme }) => ({\n  zIndex: 1,\n  backgroundColor: theme.palette.primary.main,\n  color: theme.palette.secondary.contrastText,\n  margin: \"0 2px\",\n}));\n\nexport const StyledAutocomplete = styled(\n  Autocomplete<string, true, false, true>\n)({\n  \"& .MuiFormControl-root\": {\n    height: \"unset\",\n  },\n});\n","import { AutocompleteProps } from \"@mui/material\";\nimport { TextField } from \"atomicComponents/atoms/TextField\";\nimport { useCurrentUser } from \"framework/authentication/useCurrentUser\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { CollaborationState } from \"linked-models/collaboration/collaboration.enum\";\nimport { IUserPublicDataDTO } from \"linked-models/user/user.dto\";\nimport { memo, useMemo } from \"react\";\nimport { useFormContext, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useGetUserCollaborantsQuery } from \"../../CollaborantsDrawer/queries/getUserCollaborants.query.\";\nimport { IReminderDialogState } from \"../models/reminderDialogState.model\";\nimport { StyledAutocomplete, StyledAutocompleteChip } from \"./styles\";\n\ninterface Props\n  extends Omit<\n    AutocompleteProps<string, true, false, true, \"div\">,\n    \"renderInput\" | \"options\"\n  > {\n  name: \"assignedOwners\" | \"assignedUsers\";\n  defaultValues: IUserPublicDataDTO[];\n}\n\nconst CollaborantAutocomplete = ({\n  name,\n  defaultValues,\n  ...autocompleteProps\n}: Props): JSX.Element => {\n  const { t } = useTranslation();\n  const watch = useWatch<IReminderDialogState>();\n  const { setValue } = useFormContext();\n  const currentWatchValue = watch[name];\n  const { currentUser } = useCurrentUser();\n  const userCollaborantsQuery = useGetUserCollaborantsQuery();\n\n  const collaborantsEmails = useMemo(() => {\n    const emails = new Set<string>();\n    userCollaborantsQuery.data?.forEach((col) => {\n      if (col.state === CollaborationState.Accepted) {\n        emails.add(col.creator.email);\n        emails.add(col.user.email);\n      }\n    });\n\n    return Array.from(emails);\n  }, [userCollaborantsQuery.data]);\n\n  const allUserEmails = useMemo(() => {\n    return Array.from(\n      new Set([...collaborantsEmails, ...defaultValues.map((u) => u.email)])\n    );\n  }, [collaborantsEmails, defaultValues]);\n\n  const userEmailToPublicDataMap = useMemo(() => {\n    const userEmailToPublicDataMap = new Map<string, IUserPublicDataDTO>();\n    userCollaborantsQuery.data?.forEach((col) => {\n      if (col.state === CollaborationState.Accepted) {\n        userEmailToPublicDataMap.set(col.creator.email, col.creator);\n        userEmailToPublicDataMap.set(col.user.email, col.user);\n      }\n    });\n    defaultValues.forEach((u) => {\n      userEmailToPublicDataMap.set(u.email, u);\n    });\n\n    return userEmailToPublicDataMap;\n  }, [defaultValues, userCollaborantsQuery.data]);\n\n  const selectedEmails = currentWatchValue?.map((u) => u.email);\n\n  return (\n    <StyledAutocomplete\n      {...autocompleteProps}\n      renderTags={() => {\n        return currentWatchValue?.map((value, index) => {\n          return (\n            <StyledAutocompleteChip\n              key={index}\n              label={value.email}\n              disabled={\n                value.email === currentUser?.email ||\n                !!(value.email && !collaborantsEmails.includes(value.email))\n              }\n              onDelete={() => {\n                const prevValue = currentWatchValue;\n                const newValue = prevValue?.filter((v) => v !== value);\n                setValue(name, newValue);\n              }}\n            />\n          );\n        });\n      }}\n      multiple\n      options={allUserEmails.filter((e) => !selectedEmails?.includes(e))}\n      onChange={(_, value) => {\n        const userValue: IUserPublicDataDTO[] = [];\n        value.forEach((email) => {\n          const userData = userEmailToPublicDataMap.get(email);\n\n          if (userData) {\n            userValue.push(userData);\n          }\n        });\n        setValue(name, userValue);\n      }}\n      defaultValue={defaultValues.map((u) => u.email)}\n      renderInput={(params) => {\n        return <TextField {...params} InputLabelProps={undefined} />;\n      }}\n      noOptionsText={t(TranslationKeys.NoCollaborantOption)}\n    />\n  );\n};\n\nexport default memo(CollaborantAutocomplete);\n","import { Typography } from \"@mui/material\";\nimport { Button } from \"atomicComponents/atoms/Button\";\nimport Dialog from \"atomicComponents/atoms/Dialog\";\nimport { useDialogs } from \"framework/dialogs\";\nimport useAppDialogState from \"framework/dialogs/hooks/useAppDialogState\";\nimport { initialShareTodoListDialog } from \"framework/dialogs/models/initialState.const\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { useEditTodoListMutation } from \"pages/SingleTodoListPage/mutations/editTodoList/editTodoList.mutation\";\nimport { memo } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport CollaborantAutocomplete from \"../ReminderDialog/components/CollaborantAutocomplete\";\nimport { StyledForm } from \"../TodoListDialog/styles\";\nimport { ShareTodoListDialogValues } from \"./models\";\n\nconst ShareTodoListDialog = (): JSX.Element => {\n  const {\n    dialogsState: {\n      shareTodoListDialog: {\n        visible,\n        assignedOwners,\n        assignedUsers,\n        todoListId,\n        todoListName,\n      },\n    },\n    dialogsActions: { updateShareTodoListDialog },\n  } = useDialogs();\n\n  const [open, onClose] = useAppDialogState(visible, () =>\n    updateShareTodoListDialog(initialShareTodoListDialog)\n  );\n\n  const defaultFormValues = {\n    assignedOwners,\n    assignedUsers,\n  };\n  const methods = useForm<ShareTodoListDialogValues>({\n    defaultValues: defaultFormValues,\n  });\n  const editTodoListMutation = useEditTodoListMutation();\n  const { t } = useTranslation();\n\n  const onSubmit = (data: ShareTodoListDialogValues) => {\n    editTodoListMutation.mutate({\n      todoListId,\n      data: {\n        assignedUsers: data.assignedUsers.map((u) => u.email),\n        assignedOwners: data.assignedOwners.map((u) => u.email),\n      },\n    });\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <StyledForm onSubmit={methods.handleSubmit(onSubmit)}>\n        <FormProvider {...methods}>\n          <Typography variant=\"h4\">\n            {t(TranslationKeys.ShareTodoList)}: {todoListName}\n          </Typography>\n          <Typography>{t(TranslationKeys.CurrentOwners)}</Typography>\n          <CollaborantAutocomplete\n            name=\"assignedOwners\"\n            defaultValues={defaultFormValues?.assignedOwners}\n          />\n          <Typography>{t(TranslationKeys.CurrentUsers)}</Typography>\n          <CollaborantAutocomplete\n            name=\"assignedUsers\"\n            defaultValues={defaultFormValues?.assignedUsers}\n          />\n          <Button type=\"submit\">{t(TranslationKeys.Save)}</Button>\n        </FormProvider>\n      </StyledForm>\n    </Dialog>\n  );\n};\n\nexport default memo(ShareTodoListDialog);\n","import { Autocomplete, Chip, styled } from \"@mui/material\";\n\nexport const StyledForm = styled(\"form\")(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: 10,\n  padding: \"10px 0\",\n  [theme.breakpoints.up(\"sm\")]: {\n    maxHeight: \"70vh\",\n    overflowX: \"hidden\",\n    overflowY: \"auto\",\n  },\n}));\n\nexport const StyledInlineInputs = styled(\"div\")({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n});\n\nexport const StyledAutocompleteChip = styled(Chip)(({ theme }) => ({\n  zIndex: 1,\n  backgroundColor: theme.palette.primary.main,\n  color: theme.palette.secondary.contrastText,\n  margin: \"0 2px\",\n}));\n\nexport const StyledAutocomplete = styled(\n  Autocomplete<string, true, false, true>\n)({\n  marginBottom: 10,\n  \"& .MuiFormControl-root\": {\n    height: \"unset\",\n  },\n});\n","import { useState } from \"react\";\n\n/**\n * Hook used to handle open, onClose state of the dialogs that are part of dialogs context. It closes dialog after animation ends. It is necessary because dialogs are loaded lazy and mounted only when their context visibility is set to true.\n */\nconst useAppDialogState = <T extends { visible: boolean }>(\n  contextVisible: boolean,\n  onCloseContextAction: (payload: T) => void\n): [boolean, () => void] => {\n  const [localVisible, setLocalVisible] = useState(contextVisible);\n\n  const onClose = () => {\n    setLocalVisible(false);\n    setTimeout(() => {\n      onCloseContextAction({ visible: false } as T);\n    }, 300);\n  };\n\n  return [localVisible, onClose];\n};\n\nexport default useAppDialogState;\n","import { useMutation } from \"@tanstack/react-query\";\nimport { apiPut } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { ITodoListWithMembersDto } from \"linked-models/todoList/todoList.dto\";\nimport { ITodoList } from \"linked-models/todoList/todoList.model\";\nimport {\n  URL_TODO_LIST,\n  URL_TODO_LISTS,\n} from \"linked-models/todoList/todoList.urls\";\nimport useUpdateQueriesAfterEditingTodoList from \"./useUpdateQueriesAfterEditingTodoList\";\n\nexport const useEditTodoListMutation = () => {\n  const updateQueriesAfterEditingTodoList =\n    useUpdateQueriesAfterEditingTodoList();\n\n  const editTodoList = async ({\n    todoListId,\n    data,\n  }: {\n    todoListId: string;\n    data: Partial<ITodoList>;\n  }) => {\n    return apiPut<Partial<ITodoList>, ITodoListWithMembersDto>(\n      FRONTIFY_URL(URL_TODO_LISTS, URL_TODO_LIST(todoListId)),\n      data\n    ).then((res) => res.data);\n  };\n\n  return useMutation(editTodoList, {\n    onSuccess: updateQueriesAfterEditingTodoList,\n  });\n};\n","export enum CollaborationState {\n  /** The collaboration is pending - user has not accepted or rejected it yet */\n  Pending = \"PENDING\",\n  /** The collaboration is accepted */\n  Accepted = \"ACCEPTED\",\n  /** The collaboration was rejected for the first time */\n  Rejected = \"REJECTED\",\n  /** The collaboration request was rejected and then re-opened */\n  ReOpened = \"REOPENED\",\n  /** User has blocked the collaboration with other user or rejected it for the second time */\n  Blocked = \"BLOCKED\",\n}\n","export const URL_COLLABORANTS = `/collaborants`;\n\nexport const COLLABORATION_PARAM = \"collaborationId\";\n\nexport const URL_COLLABORATION = (collaborationId?: string) =>\n  `/${collaborationId || \":\" + COLLABORATION_PARAM}`;\n\nexport const URL_INVITE_COLLABORANT = `/inviteCollaborant`;\nexport const URL_REJECT = `/reject`;\nexport const URL_ACCEPT = `/accept`;\n"],"names":["StyledInnerWrapper","styled","_ref","theme","_defineProperty","backgroundColor","palette","primary","light","padding","height","borderRadius","breakpoints","up","StyledCloseButton","IconButton","_ref3","position","main","top","right","width","transition","opacity","StyledDialog","MuiDialog","_ref5","_MuiDialogPaper","overflow","color","contrastText","boxSizing","minHeight","margin","maxWidth","transform","Transition","forwardRef","props","ref","_jsx","Slide","_objectSpread","direction","in","Dialog","children","_objectWithoutProperties","_excluded","_jsxs","TransitionComponent","keepMounted","onClose","onClick","e","_props$onClose","call","CloseIcon","memo","useGetUserCollaborantsQuery","options","getUserCollaborants","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","apiGet","FRONTIFY_URL","URL_USERS","URL_COLLABORANTS","then","res","data","abrupt","sent","stop","apply","arguments","useQuery","StyledAutocompleteChip","Chip","zIndex","secondary","StyledAutocomplete","Autocomplete","CollaborantAutocomplete","name","defaultValues","autocompleteProps","t","useTranslation","watch","useWatch","setValue","useFormContext","currentWatchValue","currentUser","useCurrentUser","userCollaborantsQuery","collaborantsEmails","useMemo","_userCollaborantsQuer","emails","Set","forEach","col","state","CollaborationState","Accepted","add","creator","email","user","Array","from","allUserEmails","concat","_toConsumableArray","map","u","userEmailToPublicDataMap","_userCollaborantsQuer2","Map","set","selectedEmails","renderTags","value","index","label","disabled","includes","onDelete","newValue","filter","v","multiple","onChange","_","userValue","userData","get","push","defaultValue","renderInput","params","TextField","InputLabelProps","undefined","noOptionsText","TranslationKeys","NoCollaborantOption","ShareTodoListDialog","_useDialogs","useDialogs","_useDialogs$dialogsSt","dialogsState","shareTodoListDialog","visible","assignedOwners","assignedUsers","todoListId","todoListName","updateShareTodoListDialog","dialogsActions","_useAppDialogState","useAppDialogState","initialShareTodoListDialog","_useAppDialogState2","_slicedToArray","open","defaultFormValues","methods","useForm","editTodoListMutation","useEditTodoListMutation","StyledForm","onSubmit","handleSubmit","mutate","FormProvider","Typography","variant","ShareTodoList","CurrentOwners","CurrentUsers","Button","type","Save","display","flexDirection","gap","maxHeight","overflowX","overflowY","StyledInlineInputs","justifyContent","alignItems","marginBottom","contextVisible","onCloseContextAction","_useState","useState","_useState2","localVisible","setLocalVisible","setTimeout","updateQueriesAfterEditingTodoList","useUpdateQueriesAfterEditingTodoList","editTodoList","_ref2","apiPut","URL_TODO_LISTS","URL_TODO_LIST","_x","useMutation","onSuccess","URL_COLLABORATION","collaborationId","URL_INVITE_COLLABORANT","URL_REJECT","URL_ACCEPT"],"sourceRoot":""}
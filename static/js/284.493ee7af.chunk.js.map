{"version":3,"file":"static/js/284.493ee7af.chunk.js","mappings":"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","sources":["hooks/useCheckLoader.ts","atomicComponents/atoms/Loaders/IconSkeletonLoader.tsx","pages/SingleTodoListPage/components/TodoListCard/components/LoaderSkeletons/CardActionsSkeleton.tsx","pages/SingleTodoListPage/components/TodoListCard/components/LoaderSkeletons/CardContentSkeleton.tsx","pages/SingleTodoListPage/components/TodoListCard/components/LoaderSkeletons/CardHeaderSkeleton.tsx","pages/SingleTodoListPage/components/TodoListCardLoader.tsx","pages/SingleTodoListPage/styles.ts","pages/SingleTodoListPage/index.tsx","pages/SingleTodoListPage/queries/getTodoList.query.ts","../node_modules/@mui/icons-material/ArrowBack.js","../node_modules/@mui/icons-material/ArrowBackIosNew.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\n/**\n * Determines wheter to show or not to show loader\n * At beginning - don't show loader\n * After first timeout, if still loading - showLoader, if not - don't show and return\n * After second timout showLoader is equal to passed isLoading param - when loading is finished - don't show loader\n * @param isLoading - usually query.isLoading\n * @returns showLoader state\n */\nconst useCheckLoader = (isLoading: boolean | undefined) => {\n  const [showLoader, setShowLoader] = useState(false);\n  const timeoutPassed = useRef(false);\n  const isLoadingRef = useRef(isLoading);\n  isLoadingRef.current = isLoading;\n\n  useEffect(() => {\n    //second timer fired after 300ms if loading didn't finish eariler\n    //sync showLoader and from now second useEffect will sync loading state\n    const secondTimer = setTimeout(() => {\n      timeoutPassed.current = true;\n      setShowLoader(!!isLoadingRef.current);\n    }, 300);\n\n    //first timer fired after 100ms\n    //if still loading - set loader to true, else means finish loading (clear second timeout )\n    const timer = setTimeout(() => {\n      if (isLoadingRef.current) {\n        setShowLoader(true);\n      } else {\n        clearTimeout(secondTimer);\n      }\n    }, 100);\n\n    return () => {\n      clearTimeout(timer);\n      clearTimeout(secondTimer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (timeoutPassed.current) {\n      setShowLoader(!!isLoading);\n    }\n  }, [isLoading, timeoutPassed]);\n\n  return showLoader;\n};\n\nexport default useCheckLoader;\n","import { Skeleton } from \"@mui/material\";\n\nexport const IconSkeleton = () => (\n  <Skeleton animation=\"wave\" height={40} width={27} />\n);\n","import { Box, CardActions, Skeleton } from \"@mui/material\";\nimport { IconSkeleton } from \"atomicComponents/atoms/Loaders/IconSkeletonLoader\";\nimport { memo } from \"react\";\n\nconst CardActionsSkeleton = (): JSX.Element => {\n  return (\n    <CardActions sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <Skeleton animation=\"wave\" height={60} width=\"150px\" />\n      <Box sx={{ display: \"flex\", gap: 1 }}>\n        {[1, 2, 3].map((_, index) => (\n          <IconSkeleton key={index} />\n        ))}\n      </Box>\n    </CardActions>\n  );\n};\n\nexport default memo(CardActionsSkeleton);\n","import { Skeleton } from \"@mui/material\";\nimport { memo } from \"react\";\n\nconst CardContentSkeleton = (): JSX.Element => {\n  return (\n    <Skeleton\n      sx={{ minHeight: 190, flexGrow: 1 }}\n      animation=\"wave\"\n      variant=\"rectangular\"\n    />\n  );\n};\n\nexport default memo(CardContentSkeleton);\n","import { CardHeader, Skeleton } from \"@mui/material\";\nimport { IconSkeleton } from \"atomicComponents/atoms/Loaders/IconSkeletonLoader\";\nimport { memo } from \"react\";\n\nconst CardHeaderSkeleton = (): JSX.Element => {\n  return (\n    <CardHeader\n      avatar={\n        <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\n      }\n      title={\n        <Skeleton\n          animation=\"wave\"\n          height={10}\n          width=\"80%\"\n          style={{ marginBottom: 6 }}\n        />\n      }\n      subheader={<Skeleton animation=\"wave\" height={10} width=\"40%\" />}\n      action={<IconSkeleton />}\n    />\n  );\n};\n\nexport default memo(CardHeaderSkeleton);\n","import Card from \"@mui/material/Card\";\nimport CardActionsSkeleton from \"./TodoListCard/components/LoaderSkeletons/CardActionsSkeleton\";\nimport CardContentSkeleton from \"./TodoListCard/components/LoaderSkeletons/CardContentSkeleton\";\nimport CardHeaderSkeleton from \"./TodoListCard/components/LoaderSkeletons/CardHeaderSkeleton\";\n\nexport const TodoListCardLoader = () => {\n  return (\n    <Card\n      sx={{\n        m: 2,\n        borderRadius: \"20px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n      elevation={0}\n    >\n      <CardHeaderSkeleton />\n      <CardContentSkeleton />\n      <CardActionsSkeleton />\n    </Card>\n  );\n};\n","import ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport { styled } from \"@mui/material\";\n\nexport const StyledSingleTodoListPageWrapper = styled(\"main\")(({ theme }) => ({\n  position: \"relative\",\n  width: \"100%\",\n  top: 15,\n  paddingLeft: \"15px\",\n  paddingRight: \"15px\",\n  marginBottom: \"30px\",\n  maxWidth: 800,\n  overflow: \"hidden\",\n  height: \"calc(100vh - 90px)\",\n  zIndex: 1000,\n  [theme.breakpoints.up(\"sm\")]: {\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n  \"& > div\": {\n    marginTop: \"20px\",\n    height: \"calc(100% - 60px)\",\n    \"& > div\": {\n      height: \"100%\",\n    },\n  },\n}));\n\nexport const StyledSwipeIndicator = styled(ArrowBackIosNewIcon, {\n  shouldForwardProp: (prop) => prop !== \"right\",\n})<{ right?: boolean }>(({ right, theme }) => ({\n  position: \"absolute\",\n  top: \"0\",\n  left: right ? \"unset\" : \"0%\",\n  right: right ? \"0%\" : \"unset\",\n  width: \"30px\",\n  height: \"30px\",\n  color: theme.palette.primary.main,\n  transform: right ? \"rotate(180deg)\" : \"unset\",\n  cursor: \"pointer\",\n  transition: \"all 0.15s ease-in-out\",\n  \"&:hover\": {\n    color: theme.palette.primary.dark,\n    transform: right ? \"rotate(180deg) scale(1.1)\" : \"scale(1.1)\",\n  },\n  [theme.breakpoints.up(\"sm\")]: {\n    top: \"50%\",\n  },\n}));\n\nexport const StyledBackButton = styled(\"button\")(({ theme }) => ({\n  background: \"transparent\",\n  margin: \"10px auto 0\",\n  padding: \"0\",\n  border: \"none\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  cursor: \"pointer\",\n  color: theme.palette.primary.contrastText,\n  \"& svg\": {\n    display: \"none\",\n    transition: \".2s\",\n  },\n  \"& p\": {\n    marginLeft: \"10px\",\n    fontSize: 16,\n    transition: \".2s\",\n  },\n  \"&:hover svg\": {\n    transform: \"rotate3d(0,1,0,180deg)\",\n  },\n  \"&:hover p\": {\n    transform: \"scale(1.05)\",\n  },\n\n  [theme.breakpoints.up(\"sm\")]: {\n    \"& svg\": {\n      display: \"block\",\n    },\n  },\n}));\n","import ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { motion } from \"framer-motion\";\nimport { useCurrentUser } from \"framework/authentication/useCurrentUser\";\nimport { Pages } from \"framework/routing/pages\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport useCheckLoader from \"hooks/useCheckLoader\";\nimport TodoListCard from \"pages/SingleTodoListPage/components/TodoListCard\";\nimport EmptyTodoLists from \"pages/TodoListsPage/components/EmptyTodoLists\";\nimport { getTodoListsOrderLSKey } from \"pages/TodoListsPage/components/TodoListsContainer/helpers\";\nimport { memo, useCallback, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { TodoListCardLoader } from \"./components/TodoListCardLoader\";\nimport { useGetExtendedTodoListQuery } from \"./queries/getTodoList.query\";\nimport {\n  StyledBackButton,\n  StyledSingleTodoListPageWrapper,\n  StyledSwipeIndicator,\n} from \"./styles\";\n\nconst variants = {\n  enter: (direction: number) => {\n    return {\n      x: direction > 0 ? 800 : -800,\n      opacity: 0,\n    };\n  },\n  initial: { opacity: 0 },\n  center: {\n    zIndex: 1,\n    x: 0,\n    opacity: 1,\n  },\n};\n\nconst SingleTodoListPage = (): JSX.Element => {\n  const { todoListId } = useParams();\n  const [direction, setDirection] = useState(0);\n  const { currentUser } = useCurrentUser();\n  const navigate = useNavigate();\n  const [animationKey, setAnimationKey] = useState(\"\");\n  const { t } = useTranslation();\n  const getTodoListWithTasksQuery = useGetExtendedTodoListQuery(todoListId);\n  const showLoader = useCheckLoader(getTodoListWithTasksQuery.isLoading);\n\n  const todoListsOrderFromLS: string[] = JSON.parse(\n    localStorage.getItem(getTodoListsOrderLSKey(currentUser?.id || \"\")) || \"[]\"\n  );\n\n  const paginate = useCallback(\n    (newDirection: number) => {\n      setDirection(newDirection);\n      if (!todoListId) return;\n      const currentIndex = todoListsOrderFromLS.indexOf(todoListId);\n      const nextIndex =\n        newDirection < 0\n          ? currentIndex > todoListsOrderFromLS.length - 2\n            ? 0\n            : currentIndex + 1\n          : currentIndex === 0\n          ? todoListsOrderFromLS.length - 1\n          : currentIndex - 1;\n\n      const nextTodoListId = todoListsOrderFromLS[nextIndex];\n      setAnimationKey(nextTodoListId);\n      navigate(Pages.TodoListPage.path(nextTodoListId));\n    },\n    [todoListId, todoListsOrderFromLS, navigate]\n  );\n\n  const content = useMemo(() => {\n    let pageContent = null;\n\n    if (showLoader) pageContent = <TodoListCardLoader />;\n    else if (\n      getTodoListWithTasksQuery.isFetched &&\n      !getTodoListWithTasksQuery.data\n    ) {\n      pageContent = <EmptyTodoLists />;\n    } else if (!!getTodoListWithTasksQuery.data) {\n      pageContent = (\n        <TodoListCard\n          disableHeaderRedirect\n          todoList={getTodoListWithTasksQuery.data}\n          scrollableContent\n          actionsVariant=\"buttons\"\n        />\n      );\n    }\n\n    return pageContent;\n  }, [\n    getTodoListWithTasksQuery.data,\n    getTodoListWithTasksQuery.isFetched,\n    showLoader,\n  ]);\n\n  if (!getTodoListWithTasksQuery.data && !showLoader) return <></>;\n\n  return (\n    <StyledSingleTodoListPageWrapper key={animationKey}>\n      <StyledBackButton onClick={() => navigate(Pages.TodoListsPage.path)}>\n        <ArrowBackIcon />\n        <p>{t(TranslationKeys.BackToTodoLists)}</p>\n      </StyledBackButton>\n      <motion.div\n        custom={direction}\n        variants={variants}\n        initial={direction ? \"enter\" : \"initial\"}\n        animate=\"center\"\n        exit=\"exit\"\n        transition={{\n          opacity: { duration: 0.2 },\n        }}\n      >\n        {content}\n      </motion.div>\n      {todoListsOrderFromLS.length > 2 && (\n        <>\n          <StyledSwipeIndicator onClick={() => paginate(1)} />\n          <StyledSwipeIndicator right onClick={() => paginate(-1)} />\n        </>\n      )}\n    </StyledSingleTodoListPageWrapper>\n  );\n};\n\nexport default memo(SingleTodoListPage);\n","import { useQuery, UseQueryOptions } from \"@tanstack/react-query\";\nimport { apiGet } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { IExtendedTodoListDto } from \"linked-models/todoList/todoList.dto\";\nimport {\n  PARAM_EXTENDED,\n  URL_TODO_LIST,\n  URL_TODO_LISTS,\n} from \"linked-models/todoList/todoList.urls\";\n\nexport const useGetExtendedTodoListQuery = (\n  todoListId?: string,\n  options?: Omit<UseQueryOptions<IExtendedTodoListDto>, \"queryFn\">\n) => {\n  const getExtendedTodoList = async () => {\n    return await apiGet<IExtendedTodoListDto>(\n      FRONTIFY_URL(\n        URL_TODO_LISTS,\n        URL_TODO_LIST(todoListId) + `?${PARAM_EXTENDED}=true`\n      )\n    ).then((res) => res.data);\n  };\n\n  return useQuery(\n    [URL_TODO_LISTS, URL_TODO_LIST(todoListId), PARAM_EXTENDED],\n    getExtendedTodoList,\n    options\n  );\n};\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNew');\nexports.default = _default;"],"names":["isLoading","_useState","useState","_useState2","_slicedToArray","showLoader","setShowLoader","timeoutPassed","useRef","isLoadingRef","current","useEffect","secondTimer","setTimeout","timer","clearTimeout","IconSkeleton","_jsx","Skeleton","animation","height","width","CardActionsSkeleton","_jsxs","CardActions","sx","display","justifyContent","children","Box","gap","map","_","index","memo","CardContentSkeleton","minHeight","flexGrow","variant","CardHeaderSkeleton","CardHeader","avatar","title","style","marginBottom","subheader","action","TodoListCardLoader","Card","m","borderRadius","flexDirection","elevation","StyledSingleTodoListPageWrapper","styled","_ref","_ref2","theme","position","top","paddingLeft","paddingRight","maxWidth","overflow","zIndex","_defineProperty","breakpoints","up","marginTop","StyledSwipeIndicator","ArrowBackIosNewIcon","shouldForwardProp","prop","_ref3","right","left","color","palette","primary","main","transform","cursor","transition","dark","StyledBackButton","_ref5","background","margin","padding","border","alignItems","contrastText","marginLeft","fontSize","variants","enter","direction","x","opacity","initial","center","SingleTodoListPage","todoListId","useParams","setDirection","currentUser","useCurrentUser","navigate","useNavigate","_useState3","_useState4","animationKey","setAnimationKey","t","useTranslation","getTodoListWithTasksQuery","options","getExtendedTodoList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","apiGet","FRONTIFY_URL","URL_TODO_LISTS","URL_TODO_LIST","concat","PARAM_EXTENDED","then","res","data","abrupt","sent","stop","apply","arguments","useQuery","useGetExtendedTodoListQuery","useCheckLoader","todoListsOrderFromLS","JSON","parse","localStorage","getItem","getTodoListsOrderLSKey","id","paginate","useCallback","newDirection","currentIndex","indexOf","nextIndex","length","nextTodoListId","Pages","TodoListPage","path","content","useMemo","pageContent","isFetched","EmptyTodoLists","TodoListCard","disableHeaderRedirect","todoList","scrollableContent","actionsVariant","onClick","TodoListsPage","ArrowBackIcon","TranslationKeys","BackToTodoLists","motion","div","custom","animate","exit","duration","_Fragment","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
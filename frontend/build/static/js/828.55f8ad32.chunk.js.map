{"version":3,"file":"static/js/828.55f8ad32.chunk.js","mappings":"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","sources":["pages/LoginPage/LoginPanel/styles.ts","pages/SharedPages/ForgetPasswordPage/styles.ts","pages/SharedPages/ForgetPasswordPage/index.tsx","pages/SharedPages/ForgetPasswordPage/useSetForgottenPassword.mutation.ts"],"sourcesContent":["import { styled } from \"@mui/material\";\n\nexport const StyledContentWrapper = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  gap: \"20px\",\n  overflow: \"visible\",\n  backgroundColor: theme.palette.secondary.light,\n  color: theme.palette.secondary.contrastText,\n  padding: \"50px 60px\",\n  backgroundImage: `url(${process.env.PUBLIC_URL}/images/wave-doodles.png)`,\n  borderRadius: \"200px 210px 200px 155px\",\n\n  \"@keyframes borderWave\": {\n    \"0%\": {\n      borderRadius: \"200px 210px 200px 155px\",\n    },\n    \"25%\": {\n      borderRadius: \"210px 200px 190px 175px\",\n    },\n    \"50%\": {\n      borderRadius: \"220px 190px 200px 195px\",\n    },\n    \"75%\": {\n      borderRadius: \"210px 200px 190px 175px\",\n    },\n    \"100%\": {\n      borderRadius: \"200px 210px 200px 155px\",\n    },\n  },\n  width: \"90%\",\n\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `518px`,\n    minHeight: \"fit-content\",\n    animation: \"borderWave 5s ease-in-out infinite\",\n  },\n}));\n\nexport const StyledOuterWave = styled(StyledContentWrapper)({\n  transform: \"scale(1.05)\",\n  opacity: 0.5,\n  position: \"absolute\",\n  animationDelay: \"1.5s !important\",\n  height: \"100%\",\n  zIndex: -1,\n});\n\nexport const StyledWrapper = styled(\"div\")({\n  position: \"relative\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n});\n\nexport const StyledForm = styled(\"form\")(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"100%\",\n  gap: \"20px\",\n  marginTop: \"16px\",\n  color: theme.palette.primary.main,\n}));\n\nexport const StyledGruppedButtons = styled(\"div\")({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  flexWrap: \"wrap\",\n  width: \"100%\",\n  gap: \"20px\",\n  \"& button\": {\n    flex: 1,\n  },\n});\n\nexport const StyledForgetPassBtn = styled(\"button\")(({ theme }) => ({\n  background: \"transparent\",\n  border: \"none\",\n  color: theme.palette.secondary.contrastText,\n  cursor: \"pointer\",\n  fontSize: \"14px\",\n  transition: \"all 0.2s ease-in-out\",\n  \"&:hover\": {\n    textDecoration: \"underline\",\n  },\n}));\n","import { styled } from \"@mui/material\";\n\nexport const StyledForgetPassPageWrapper = styled(\"main\")({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  width: \"100%\",\n  maxWidth: \"400px\",\n});\n","import { Typography } from \"@mui/material\";\nimport { Button } from \"atomicComponents/atoms/Button\";\nimport CollapsableAlert from \"atomicComponents/molecules/CollapsableAlert\";\nimport { ControlledTextField } from \"atomicComponents/molecules/ControlledInputText\";\nimport { Pages } from \"framework/routing/pages\";\nimport { useSnackbar } from \"framework/snackBar\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { USER_PARAM } from \"linked-models/user/user.urls\";\nimport { StyledForm } from \"pages/LoginPage/LoginPanel/styles\";\nimport { IChangePasswordFormValues } from \"pages/UserPage/components/PasswordChangeForm\";\nimport { memo } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { StyledForgetPassPageWrapper } from \"./styles\";\nimport { useSetForgottenPassword } from \"./useSetForgottenPassword.mutation\";\n\ntype ISetNewPasswordFormValues = Omit<\n  IChangePasswordFormValues,\n  \"currentPassword\"\n>;\n\nconst ForgetPasswordPage = (): JSX.Element => {\n  const { t } = useTranslation();\n  const { setSnackbar } = useSnackbar();\n  const params = useParams();\n  const userId = params[USER_PARAM];\n  const navigate = useNavigate();\n  const setForgottenPassword = useSetForgottenPassword();\n  const {\n    control,\n    formState: { errors },\n    setError,\n    handleSubmit,\n  } = useForm<ISetNewPasswordFormValues>();\n\n  if (!userId) return <div>Invalid link</div>;\n\n  const onSubmit = (data: ISetNewPasswordFormValues) => {\n    if (data.newPassword !== data.newPasswordRepeat) {\n      setError(\"newPasswordRepeat\", {\n        message: t(TranslationKeys.PasswordsNoMatch),\n      });\n      return;\n    }\n\n    setForgottenPassword.mutate(\n      { newPassword: data.newPassword, userId },\n      {\n        onSuccess: () => {\n          setSnackbar({\n            message: t(TranslationKeys.PasswordChanged),\n            userData: undefined,\n          });\n          navigate(Pages.HomePage.path);\n        },\n        onError: () => {\n          setSnackbar({\n            message: t(TranslationKeys.ForgetPasswordChangeError),\n            severity: \"error\",\n          });\n        },\n      }\n    );\n  };\n\n  return (\n    <StyledForgetPassPageWrapper>\n      <StyledForm onSubmit={handleSubmit(onSubmit)}>\n        <Typography variant=\"h4\">\n          {t(TranslationKeys.ChangePassword)}\n        </Typography>\n        <ControlledTextField\n          name={\"newPassword\"}\n          control={control}\n          placeholder={t(TranslationKeys.NewPasswordLabel)}\n          type=\"password\"\n        />\n        <CollapsableAlert\n          collapseProps={{ in: !!errors.newPassword }}\n          alertProps={{ severity: \"warning\" }}\n        >\n          {t(TranslationKeys.PasswordRequired)}\n        </CollapsableAlert>\n        <ControlledTextField\n          name={\"newPasswordRepeat\"}\n          control={control}\n          placeholder={t(TranslationKeys.NewPasswordRepeatLabel)}\n          type=\"password\"\n        />\n        <CollapsableAlert\n          collapseProps={{ in: !!errors.newPasswordRepeat }}\n          alertProps={{ severity: \"warning\" }}\n        >\n          {t(TranslationKeys.PasswordsNoMatch)}\n        </CollapsableAlert>\n        <Button disabled={Object.values(errors).length > 0} type=\"submit\">\n          {t(TranslationKeys.Save)}\n        </Button>\n      </StyledForm>\n    </StyledForgetPassPageWrapper>\n  );\n};\n\nexport default memo(ForgetPasswordPage);\n","import { useMutation } from \"@tanstack/react-query\";\nimport { apiPost } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport {\n  URL_FORGET_PASSWORD,\n  URL_USER,\n  URL_USERS,\n} from \"linked-models/user/user.urls\";\n\nexport const useSetForgottenPassword = () => {\n  const forgetPassword = async ({\n    userId,\n    newPassword,\n  }: {\n    userId: string;\n    newPassword: string;\n  }): Promise<void> => {\n    \n    const url = FRONTIFY_URL(\n      URL_FORGET_PASSWORD,\n      `${URL_USERS}${URL_USER(userId)}`\n    );\n    await apiPost<{ newPassword: string }, void>(url, { newPassword });\n  };\n\n  return useMutation(forgetPassword);\n};\n"],"names":["StyledContentWrapper","styled","_ref","theme","_defineProperty","display","flexDirection","alignItems","gap","overflow","backgroundColor","palette","secondary","light","color","contrastText","padding","backgroundImage","concat","process","borderRadius","width","breakpoints","up","minHeight","animation","StyledOuterWave","transform","opacity","position","animationDelay","height","zIndex","StyledWrapper","justifyContent","StyledForm","_ref3","marginTop","primary","main","StyledGruppedButtons","flexWrap","flex","StyledForgetPassBtn","_ref4","background","border","cursor","fontSize","transition","textDecoration","StyledForgetPassPageWrapper","maxWidth","ForgetPasswordPage","t","useTranslation","setSnackbar","useSnackbar","userId","useParams","USER_PARAM","navigate","useNavigate","setForgottenPassword","forgetPassword","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newPassword","url","wrap","_context","prev","next","FRONTIFY_URL","URL_FORGET_PASSWORD","URL_USERS","URL_USER","apiPost","stop","_x","apply","arguments","useMutation","useSetForgottenPassword","_useForm","useForm","control","errors","formState","setError","handleSubmit","_jsx","children","_jsxs","onSubmit","data","newPasswordRepeat","mutate","onSuccess","message","TranslationKeys","PasswordChanged","userData","undefined","Pages","HomePage","path","onError","ForgetPasswordChangeError","severity","PasswordsNoMatch","Typography","variant","ChangePassword","ControlledTextField","name","placeholder","NewPasswordLabel","type","CollapsableAlert","collapseProps","in","alertProps","PasswordRequired","NewPasswordRepeatLabel","Button","disabled","Object","values","length","Save","memo"],"sourceRoot":""}
{"version":3,"file":"static/js/313.d3ed59fc.chunk.js","mappings":"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","sources":["atomicComponents/atoms/Separator/styles.ts","atomicComponents/atoms/Separator/index.tsx","framework/dialogs/components/CollaborantsDrawer/queries/getUserCollaborants.query..ts","framework/dialogs/components/ReminderDialog/components/styles.ts","framework/dialogs/components/ReminderDialog/components/CollaborantAutocomplete.tsx","framework/dialogs/components/ReminderDialog/components/AccessChoose/index.tsx","framework/dialogs/components/ReminderDialog/components/DeleteSection/index.tsx","pages/RemindersPage/mutations/deleteReminder/deleteReminder.mutation.ts","framework/dialogs/components/ReminderDialog/components/GeneralInfo/index.tsx","framework/dialogs/components/ReminderDialog/components/NotifySetup/DatesInfo.tsx","framework/dialogs/components/ReminderDialog/components/NotifySetup/index.tsx","framework/dialogs/components/ReminderDialog/components/TodoListSelect.tsx","pages/TodoListsPage/queries/getUserTodoLists.query.ts","framework/dialogs/components/ReminderDialog/components/ScopesChoose/index.tsx","framework/dialogs/components/ReminderDialog/hooks/useCreateDefaultReminderDialogData.ts","framework/dialogs/components/ReminderDialog/index.tsx","pages/RemindersPage/mutations/createReminder/createReminder.mutation.ts","framework/dialogs/components/TodoListDialog/IconPicker/styles.ts","framework/dialogs/components/TodoListDialog/IconPicker/index.tsx","pages/RemindersPage/mutations/editReminder/editReminder.mutation.ts","../../models/collaboration/collaboration.enum.ts","../node_modules/@mui/icons-material/DeleteForever.js","../node_modules/@mui/icons-material/EditCalendar.js","../node_modules/@mui/icons-material/NotificationsNone.js","../node_modules/@mui/icons-material/Share.js","../node_modules/@mui/icons-material/Widgets.js"],"sourcesContent":["import { styled } from \"@mui/material\";\n\nexport const StyledWrapper = styled(\"div\", {\n  shouldForwardProp: (prop) =>\n    prop !== \"spacingTop\" && prop !== \"spacingBottom\",\n})<{ spacingTop?: number; spacingBottom?: number }>(\n  ({ spacingTop, spacingBottom }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"20px\",\n    marginTop: spacingTop,\n    marginBottom: spacingBottom,\n  })\n);\n\nexport const StyledLine = styled(\"div\", {\n  shouldForwardProp: (prop) => prop !== \"color\",\n})<{ color?: \"primary\" | \"secondary\" }>(({ theme, color }) => ({\n  flexGrow: 1,\n  height: \"9px\",\n  borderBottom: `2px solid ${theme.palette.primary.contrastText}`,\n  borderColor: theme.palette[color || \"primary\"].contrastText,\n}));\n\nexport const StyledText = styled(\"div\", {\n  shouldForwardProp: (prop) => prop !== \"color\",\n})<{ color?: \"primary\" | \"secondary\" }>(({ theme, color }) => ({\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  color: theme.palette[color || \"primary\"].contrastText,\n}));\n","import { StyledLine, StyledText, StyledWrapper } from \"./styles\";\n\ninterface Props {\n  text: string;\n  variant?: \"primary\" | \"secondary\";\n  spacingBottom?: number;\n  spacingTop?: number;\n}\n\nexport const Separator = ({\n  text,\n  variant,\n  spacingBottom,\n  spacingTop,\n}: Props): JSX.Element => {\n  return (\n    <StyledWrapper spacingBottom={spacingBottom} spacingTop={spacingTop}>\n      <StyledLine color={variant} />\n      <StyledText color={variant}>{text}</StyledText>\n      <StyledLine color={variant} />\n    </StyledWrapper>\n  );\n};\n","import { useQuery, UseQueryOptions } from \"@tanstack/react-query\";\nimport { apiGet } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { ICollaborantDTO } from \"linked-models/collaboration/collaboration.dto\";\nimport { URL_COLLABORANTS } from \"linked-models/collaboration/collaboration.urls\";\nimport { URL_USERS } from \"linked-models/user/user.urls\";\n\nexport const useGetUserCollaborantsQuery = (\n  options?: Omit<UseQueryOptions<ICollaborantDTO[]>, \"queryFn\">\n) => {\n  const getUserCollaborants = async () => {\n    return await apiGet<ICollaborantDTO[]>(\n      FRONTIFY_URL(URL_USERS + URL_COLLABORANTS)\n    ).then((res) => res.data);\n  };\n\n  return useQuery([URL_USERS + URL_COLLABORANTS], getUserCollaborants, options);\n};\n","import { Autocomplete, Chip, styled } from \"@mui/material\";\n\nexport const StyledAutocompleteChip = styled(Chip)(({ theme }) => ({\n  zIndex: 1,\n  backgroundColor: theme.palette.primary.main,\n  color: theme.palette.secondary.contrastText,\n  margin: \"0 2px\",\n}));\n\nexport const StyledAutocomplete = styled(\n  Autocomplete<string, true, false, true>\n)({\n  \"& .MuiFormControl-root\": {\n    height: \"unset\",\n  },\n});\n","import { AutocompleteProps } from \"@mui/material\";\nimport { TextField } from \"atomicComponents/atoms/TextField\";\nimport { useCurrentUser } from \"framework/authentication/useCurrentUser\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { CollaborationState } from \"linked-models/collaboration/collaboration.enum\";\nimport { IUserPublicDataDTO } from \"linked-models/user/user.dto\";\nimport { memo, useMemo } from \"react\";\nimport { useFormContext, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useGetUserCollaborantsQuery } from \"../../CollaborantsDrawer/queries/getUserCollaborants.query.\";\nimport { IReminderDialogState } from \"../models/reminderDialogState.model\";\nimport { StyledAutocomplete, StyledAutocompleteChip } from \"./styles\";\n\ninterface Props\n  extends Omit<\n    AutocompleteProps<string, true, false, true, \"div\">,\n    \"renderInput\" | \"options\"\n  > {\n  name: \"assignedOwners\" | \"assignedUsers\";\n  defaultValues: IUserPublicDataDTO[];\n}\n\nconst CollaborantAutocomplete = ({\n  name,\n  defaultValues,\n  ...autocompleteProps\n}: Props): JSX.Element => {\n  const { t } = useTranslation();\n  const watch = useWatch<IReminderDialogState>();\n  const { setValue } = useFormContext();\n  const currentWatchValue = watch[name];\n  const { currentUser } = useCurrentUser();\n  const userCollaborantsQuery = useGetUserCollaborantsQuery();\n\n  const collaborantsEmails = useMemo(() => {\n    const emails = new Set<string>();\n    userCollaborantsQuery.data?.forEach((col) => {\n      if (col.state === CollaborationState.Accepted) {\n        emails.add(col.creator.email);\n        emails.add(col.user.email);\n      }\n    });\n\n    return Array.from(emails);\n  }, [userCollaborantsQuery.data]);\n\n  const allUserEmails = useMemo(() => {\n    return Array.from(\n      new Set([...collaborantsEmails, ...defaultValues.map((u) => u.email)])\n    );\n  }, [collaborantsEmails, defaultValues]);\n\n  const userEmailToPublicDataMap = useMemo(() => {\n    const userEmailToPublicDataMap = new Map<string, IUserPublicDataDTO>();\n    userCollaborantsQuery.data?.forEach((col) => {\n      if (col.state === CollaborationState.Accepted) {\n        userEmailToPublicDataMap.set(col.creator.email, col.creator);\n        userEmailToPublicDataMap.set(col.user.email, col.user);\n      }\n    });\n    defaultValues.forEach((u) => {\n      userEmailToPublicDataMap.set(u.email, u);\n    });\n\n    return userEmailToPublicDataMap;\n  }, [defaultValues, userCollaborantsQuery.data]);\n\n  const selectedEmails = currentWatchValue?.map((u) => u.email);\n\n  return (\n    <StyledAutocomplete\n      {...autocompleteProps}\n      renderTags={() => {\n        return currentWatchValue?.map((value, index) => {\n          return (\n            <StyledAutocompleteChip\n              key={index}\n              label={value.email}\n              disabled={\n                value.email === currentUser?.email ||\n                !!(value.email && !collaborantsEmails.includes(value.email))\n              }\n              onDelete={() => {\n                const prevValue = currentWatchValue;\n                const newValue = prevValue?.filter((v) => v !== value);\n                setValue(name, newValue);\n              }}\n            />\n          );\n        });\n      }}\n      multiple\n      options={allUserEmails.filter((e) => !selectedEmails?.includes(e))}\n      onChange={(_, value) => {\n        const userValue: IUserPublicDataDTO[] = [];\n        value.forEach((email) => {\n          const userData = userEmailToPublicDataMap.get(email);\n\n          if (userData) {\n            userValue.push(userData);\n          }\n        });\n        setValue(name, userValue);\n      }}\n      defaultValue={defaultValues.map((u) => u.email)}\n      renderInput={(params) => {\n        return <TextField {...params} InputLabelProps={undefined} />;\n      }}\n      noOptionsText={t(TranslationKeys.NoCollaborantOption)}\n    />\n  );\n};\n\nexport default memo(CollaborantAutocomplete);\n","import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { StyledAccordion } from \"atomicComponents/atoms/Accordion/styles\";\nimport { Separator } from \"atomicComponents/atoms/Separator\";\nimport { StyledForm } from \"framework/dialogs/components/TodoListDialog/styles\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { IUserPublicDataDTO } from \"linked-models/user/user.dto\";\nimport { memo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { IReminderDialogState } from \"../../models/reminderDialogState.model\";\nimport CollaborantAutocomplete from \"../CollaborantAutocomplete\";\n\ninterface Props {\n  expandedAccordion: string;\n  handleAccordionChange: (panel: string) => () => void;\n  defaultFormValues: Partial<IReminderDialogState> & {\n    assignedUsers: IUserPublicDataDTO[];\n    assignedOwners: IUserPublicDataDTO[];\n  };\n}\n\nconst AccessChoose = ({\n  expandedAccordion,\n  handleAccordionChange,\n  defaultFormValues,\n}: Props): JSX.Element => {\n  const { t } = useTranslation();\n  return (\n    <StyledAccordion\n      expanded={expandedAccordion === \"access\"}\n      onChange={handleAccordionChange(\"access\")}\n      disableGutters\n    >\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Tooltip title={t(TranslationKeys.ManageAccessReminderDescription)}>\n          <div>\n            <ShareIcon sx={{ transform: \"translate(-5px, -3px)\" }} />\n          </div>\n        </Tooltip>\n        {t(TranslationKeys.ManageAccess)}\n      </AccordionSummary>\n      <AccordionDetails>\n        <StyledForm>\n          <Separator\n            text={t(TranslationKeys.ManageAccess)}\n            spacingBottom={-5}\n            spacingTop={-5}\n          />\n          <Typography>{t(TranslationKeys.CurrentOwners)}</Typography>\n          <CollaborantAutocomplete\n            name=\"assignedOwners\"\n            defaultValues={defaultFormValues?.assignedOwners}\n          />\n          <Typography>{t(TranslationKeys.CurrentUsers)}</Typography>\n          <CollaborantAutocomplete\n            name=\"assignedUsers\"\n            defaultValues={defaultFormValues?.assignedUsers}\n          />\n        </StyledForm>\n      </AccordionDetails>\n    </StyledAccordion>\n  );\n};\n\nexport default memo(AccessChoose);\n","import DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { StyledAccordion } from \"atomicComponents/atoms/Accordion/styles\";\nimport { Button } from \"atomicComponents/atoms/Button\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { IUserPublicDataDTO } from \"linked-models/user/user.dto\";\nimport { useDeleteReminderMutation } from \"pages/RemindersPage/mutations/deleteReminder/deleteReminder.mutation\";\nimport { memo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { IReminderDialogState } from \"../../models/reminderDialogState.model\";\n\ninterface Props {\n  expandedAccordion: string;\n  handleAccordionChange: (panel: string) => () => void;\n  editReminderData?: IReminderDialogState;\n  defaultFormValues: Partial<IReminderDialogState> & {\n    assignedUsers: IUserPublicDataDTO[];\n    assignedOwners: IUserPublicDataDTO[];\n  };\n  onClose: () => void;\n}\n\nconst DeleteSection = ({\n  expandedAccordion,\n  handleAccordionChange,\n  editReminderData,\n  defaultFormValues,\n  onClose,\n}: Props): JSX.Element => {\n  const { t } = useTranslation();\n  const deleteReminderMutation = useDeleteReminderMutation();\n\n  const handleDeleteReminder = () => {\n    const todoListId =\n      defaultFormValues?.todoListId ?? editReminderData?.todoListId;\n    const taskId = editReminderData?.taskId ?? defaultFormValues?.taskId;\n\n    if (todoListId) {\n      deleteReminderMutation.mutate({\n        todoListId,\n        taskId,\n      });\n\n      onClose();\n    }\n  };\n\n  return (\n    <StyledAccordion\n      expanded={expandedAccordion === \"delete\"}\n      onChange={handleAccordionChange(\"delete\")}\n      disableGutters\n    >\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Tooltip title={t(TranslationKeys.DeleteReminderDescription)}>\n          <div>\n            <DeleteForeverIcon sx={{ transform: \"translate(-4px, -4px)\" }} />\n          </div>\n        </Tooltip>\n        {t(TranslationKeys.DeleteReminder)}\n      </AccordionSummary>\n      <AccordionDetails\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"10px\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography>{t(TranslationKeys.DeleteReminderWarning)}</Typography>\n        <Button onClick={handleDeleteReminder}>\n          {t(TranslationKeys.DeleteReminder)}\n        </Button>\n      </AccordionDetails>\n    </StyledAccordion>\n  );\n};\n\nexport default memo(DeleteSection);\n","import { useMutation } from \"@tanstack/react-query\";\nimport { apiDelete } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { IReminderAttached } from \"linked-models/reminder/reminder.model\";\nimport { URL_REMINDERS } from \"linked-models/reminder/reminder.urls\";\nimport { URL_TASK } from \"linked-models/task/task.urls\";\nimport {\n  URL_TODO_LIST,\n  URL_TODO_LISTS,\n} from \"linked-models/todoList/todoList.urls\";\nimport useUpdateQueriesAfterDeletingReminder from \"./useUpdateQueriesAfterDeletingReminder\";\n\nexport const useDeleteReminderMutation = () => {\n  const updateQueriesAfterDeletingReminder =\n    useUpdateQueriesAfterDeletingReminder();\n\n  const deleteReminder = async ({\n    todoListId,\n    taskId,\n  }: {\n    todoListId: string;\n    taskId?: string;\n  }) => {\n    const url = FRONTIFY_URL(\n      URL_TODO_LISTS +\n        URL_TODO_LIST(todoListId) +\n        URL_REMINDERS +\n        URL_TASK(taskId)\n    );\n    return apiDelete<IReminderAttached>(url).then((res) => res.data);\n  };\n\n  return useMutation(deleteReminder, {\n    onSuccess: updateQueriesAfterDeletingReminder,\n  });\n};\n","import EventIcon from \"@mui/icons-material/Event\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { StyledAccordion } from \"atomicComponents/atoms/Accordion/styles\";\nimport { Separator } from \"atomicComponents/atoms/Separator\";\nimport { ControlledTextField } from \"atomicComponents/molecules/ControlledInputText\";\nimport DatesPickers from \"framework/dialogs/components/TaskDialog/components/DatesPickers\";\nimport { StyledForm } from \"framework/dialogs/components/TodoListDialog/styles\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { memo, useEffect } from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { IReminderDialogState } from \"../../models/reminderDialogState.model\";\n\ninterface Props {\n  expandedAccordion: string;\n  handleAccordionChange: (panel: string) => () => void;\n  editReminderData?: IReminderDialogState;\n  onSubmit: (data: IReminderDialogState) => void;\n}\n\nconst GeneralInfo = ({\n  expandedAccordion,\n  handleAccordionChange,\n  editReminderData,\n  onSubmit,\n}: Props): JSX.Element => {\n  const { t } = useTranslation();\n  const {\n    handleSubmit,\n    control,\n    formState: { errors },\n    setFocus,\n  } = useFormContext<IReminderDialogState>();\n\n  const markAccordionError =\n    (!!errors.name || !!errors.text) && expandedAccordion !== \"general\";\n\n  useEffect(() => {\n    setFocus(\"name\");\n  }, [setFocus]);\n\n  return (\n    <StyledAccordion\n      expanded={expandedAccordion === \"general\"}\n      onChange={handleAccordionChange(\"general\")}\n      disableGutters\n    >\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Tooltip title={t(TranslationKeys.GeneralInfoReminderDescription)}>\n          <div>\n            <EventIcon\n              sx={{ transform: \"translate(-4px, -2px)\" }}\n              color={markAccordionError ? \"error\" : undefined}\n            />\n          </div>\n        </Tooltip>\n        <Typography>{t(TranslationKeys.GeneralInfo)}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <StyledForm onSubmit={handleSubmit(onSubmit)}>\n          <Separator\n            text={\n              editReminderData\n                ? `${t(TranslationKeys.EditReminder)}: ${editReminderData.text}`\n                : t(TranslationKeys.CreateReminder)\n            }\n            spacingBottom={15}\n            spacingTop={-5}\n          />\n          <ControlledTextField\n            autoFocus\n            name={\"name\"}\n            required\n            error={!!errors.name}\n            helperText={\n              errors.name?.type === \"required\" &&\n              t(TranslationKeys.FieldRequired)\n            }\n            control={control}\n            placeholder={t(TranslationKeys.ReminderName)}\n          />\n          <ControlledTextField\n            name={\"text\"}\n            required\n            error={!!errors.text}\n            helperText={\n              errors.text?.type === \"required\" &&\n              t(TranslationKeys.FieldRequired)\n            }\n            control={control}\n            placeholder={t(TranslationKeys.ReminderDescription)}\n          />\n          <DatesPickers />\n        </StyledForm>\n      </AccordionDetails>\n    </StyledAccordion>\n  );\n};\n\nexport default memo(GeneralInfo);\n","import { Typography } from \"@mui/material\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { memo } from \"react\";\nimport { useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { IReminderDialog } from \"../../models/reminderDialog.model\";\n\nconst DatesInfo = (): JSX.Element => {\n  const watch = useWatch<IReminderDialog>();\n  const { t } = useTranslation();\n\n  const startDate = watch[\"startDate\"];\n  const finishDate = watch[\"finishDate\"];\n\n  const options: Intl.DateTimeFormatOptions = {\n    year: \"numeric\",\n    month: \"numeric\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n\n  return (\n    <>\n      {startDate && (\n        <Typography sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <span>{t(TranslationKeys.StartDate)}:</span>\n          <strong style={{ fontWeight: 800 }}>\n            {new Date(startDate).toLocaleString(\"pl-PL\", options)}\n          </strong>\n        </Typography>\n      )}\n      {finishDate && (\n        <Typography sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <span>{t(TranslationKeys.FinishDate)}:</span>\n          <strong style={{ fontWeight: 800 }}>\n            {new Date(finishDate).toLocaleString(\"pl-PL\", options)}\n          </strong>\n        </Typography>\n      )}\n    </>\n  );\n};\n\nexport default memo(DatesInfo);\n","import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport NotificationsNoneIcon from \"@mui/icons-material/NotificationsNone\";\nimport { AccordionDetails, AccordionSummary, Tooltip } from \"@mui/material\";\nimport { StyledAccordion } from \"atomicComponents/atoms/Accordion/styles\";\nimport { Separator } from \"atomicComponents/atoms/Separator\";\nimport { ControlledCheckbox } from \"atomicComponents/molecules/ControlledCheckbox\";\nimport NotifyForm from \"framework/dialogs/components/TaskDialog/components/NotifyForm\";\nimport { StyledForm } from \"framework/dialogs/components/TodoListDialog/styles\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { memo } from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { IReminderDialog } from \"../../models/reminderDialog.model\";\nimport DatesInfo from \"./DatesInfo\";\n\ninterface Props {\n  expandedAccordion: string;\n  handleAccordionChange: (panel: string) => () => void;\n}\n\nconst NotifySetup = ({\n  expandedAccordion,\n  handleAccordionChange,\n}: Props): JSX.Element => {\n  const { t } = useTranslation();\n  const { control } = useFormContext<IReminderDialog>();\n  return (\n    <StyledAccordion\n      expanded={expandedAccordion === \"notify\"}\n      onChange={handleAccordionChange(\"notify\")}\n      disableGutters\n    >\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Tooltip title={t(TranslationKeys.SetNotificationDescription)}>\n          <div>\n            <NotificationsNoneIcon\n              sx={{ transform: \"translate(-3px, -4px)\" }}\n            />\n          </div>\n        </Tooltip>\n        {t(TranslationKeys.SetNotification)}\n      </AccordionSummary>\n      <AccordionDetails>\n        <StyledForm>\n          <Separator\n            text={t(TranslationKeys.SetNotification)}\n            spacingBottom={5}\n            spacingTop={-5}\n          />\n          <DatesInfo />\n          <ControlledCheckbox\n            name={\"notify\"}\n            control={control}\n            label={t(TranslationKeys.NotifyMe)}\n          />\n          <NotifyForm control={control as any} />\n        </StyledForm>\n      </AccordionDetails>\n    </StyledAccordion>\n  );\n};\n\nexport default memo(NotifySetup);\n","import EditCalendarIcon from \"@mui/icons-material/EditCalendar\";\nimport { ListItemIcon, ListItemText, MenuItem } from \"@mui/material\";\nimport { Select } from \"atomicComponents/atoms/Select\";\nimport { Separator } from \"atomicComponents/atoms/Separator\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport TodoListIcon from \"pages/TodoListsPage/components/TodoListIcon\";\nimport { useGetUserTodoListsQuery } from \"pages/TodoListsPage/queries/getUserTodoLists.query\";\nimport { memo, useMemo } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport IconPicker from \"../../TodoListDialog/IconPicker\";\nimport { StyledInlineInputs } from \"../../TodoListDialog/styles\";\n\nconst TodoListSelect = (): JSX.Element => {\n  const getUserTodoListsWithMembersQuery = useGetUserTodoListsQuery(true);\n  const { t } = useTranslation();\n\n  const todoListIdToNameAndMembersMap = useMemo(() => {\n    const map = new Map<string, { name: string; members: string }>();\n    getUserTodoListsWithMembersQuery.data?.forEach((todoList) => {\n      map.set(todoList.id, {\n        name: todoList.name,\n        members: Array.from(\n          new Set([\n            ...todoList.assignedOwners.map((o) => o.displayName),\n            ...todoList.assignedUsers.map((u) => u.displayName),\n          ])\n        ).join(\", \"),\n      });\n    });\n    return map;\n  }, [getUserTodoListsWithMembersQuery.data]);\n\n  return (\n    <>\n      <Separator text={t(TranslationKeys.ScopeChoose)} spacingBottom={15} />\n      <Controller\n        name={\"todoListId\"}\n        render={({ field: { onChange, value } }) => (\n          <StyledInlineInputs style={{ height: \"54px\" }}>\n            {!value || (value === \"reminder\" && <IconPicker />)}\n            <Select\n              label={t(TranslationKeys.Reminder)}\n              value={value}\n              renderValue={(value) =>\n                todoListIdToNameAndMembersMap.get(value as string)?.name ||\n                t(TranslationKeys.Reminder)\n              }\n              onChange={(e) => {\n                onChange(e.target?.value);\n              }}\n            >\n              <MenuItem value={\"reminder\"} key={\"reminder\"}>\n                <ListItemIcon>\n                  {<EditCalendarIcon color=\"secondary\" />}\n                </ListItemIcon>\n                <ListItemText\n                  secondaryTypographyProps={{\n                    style: {\n                      whiteSpace: \"normal\",\n                    },\n                  }}\n                  primary={t(TranslationKeys.Reminder)}\n                  secondary={t(TranslationKeys.ReminderInfo)}\n                />\n              </MenuItem>\n              <Separator text={t(TranslationKeys.OrChooseTodoList)} />\n              {getUserTodoListsWithMembersQuery.data?.map((todoList) => (\n                <MenuItem value={todoList.id} key={todoList.id}>\n                  <ListItemIcon>\n                    {<TodoListIcon type={todoList.icon} />}\n                  </ListItemIcon>\n                  <ListItemText\n                    primaryTypographyProps={{\n                      style: {\n                        whiteSpace: \"nowrap\",\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                      },\n                    }}\n                    secondaryTypographyProps={{\n                      style: {\n                        whiteSpace: \"normal\",\n                      },\n                    }}\n                    primary={todoList.name}\n                    secondary={\n                      todoListIdToNameAndMembersMap.get(todoList.id)?.members ||\n                      \"\"\n                    }\n                  />\n                </MenuItem>\n              )) ?? []}\n            </Select>\n          </StyledInlineInputs>\n        )}\n      />\n    </>\n  );\n};\n\nexport default memo(TodoListSelect);\n","import { useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { apiGet } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { ITodoListWithMembersDto } from \"linked-models/todoList/todoList.dto\";\nimport { ITodoListAttached } from \"linked-models/todoList/todoList.model\";\nimport {\n  PARAM_WITH_MEMBERS,\n  URL_TODO_LISTS,\n} from \"linked-models/todoList/todoList.urls\";\n\nexport const useGetUserTodoListsQuery = <T extends boolean>(\n  withMembers?: T\n): UseQueryResult<\n  T extends true ? ITodoListWithMembersDto[] : ITodoListAttached[],\n  string\n> => {\n  const getTodoLists = async () => {\n    return await apiGet<ITodoListAttached[]>(\n      FRONTIFY_URL(\n        URL_TODO_LISTS,\n        \"\",\n        withMembers\n          ? {\n              [PARAM_WITH_MEMBERS]: \"true\",\n            }\n          : undefined\n      )\n    ).then((res) => res.data);\n  };\n\n  return useQuery(\n    [URL_TODO_LISTS, withMembers ? PARAM_WITH_MEMBERS : \"\"],\n    getTodoLists\n  );\n};\n","import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport WidgetsIcon from \"@mui/icons-material/Widgets\";\nimport { AccordionDetails, AccordionSummary, Tooltip } from \"@mui/material\";\nimport { StyledAccordion } from \"atomicComponents/atoms/Accordion/styles\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { memo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport TodoListSelect from \"../TodoListSelect\";\n\ninterface Props {\n  expandedAccordion: string;\n  handleAccordionChange: (panel: string) => () => void;\n}\n\nconst ScopesChoose = ({\n  expandedAccordion,\n  handleAccordionChange,\n}: Props): JSX.Element => {\n  const { t } = useTranslation();\n  return (\n    <StyledAccordion\n      expanded={expandedAccordion === \"scope\"}\n      onChange={handleAccordionChange(\"scope\")}\n      disableGutters\n    >\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Tooltip title={t(TranslationKeys.ScopeDescription)}>\n          <div>\n            <WidgetsIcon sx={{ transform: \"translate(-5px, -3px)\" }} />\n          </div>\n        </Tooltip>\n        {t(TranslationKeys.ScopeChoose)}\n      </AccordionSummary>\n      <AccordionDetails>\n        <TodoListSelect />\n      </AccordionDetails>\n    </StyledAccordion>\n  );\n};\n\nexport default memo(ScopesChoose);\n","import dayjs from \"dayjs\";\nimport { TodoListIconEnum } from \"linked-models/todoList/todoList.enum\";\nimport { createNotifySelectParams } from \"../../TaskDialog/components/NotifyForm/helpers\";\nimport { IReminderDialogState } from \"../models/reminderDialogState.model\";\n\nconst useCreateDefaultReminderDialogData = (\n  defaultData?: Partial<IReminderDialogState>,\n  editReminderData?: IReminderDialogState\n) => {\n  const defaultStartDate =\n    defaultData?.startDate ?? editReminderData?.startDate;\n  const notifyDateFromArgs =\n    defaultData?.notifyDate ?? editReminderData?.notifyDate;\n  // if notifyDate wasn't passed, we set it to 15 mins before startDate as default\n  const defaultNotifyDate = notifyDateFromArgs\n    ? new Date(notifyDateFromArgs)\n    : defaultStartDate\n    ? new Date(new Date(defaultStartDate).getTime() - 900000)\n    : null;\n\n  const defaultFinishDate =\n    defaultData?.finishDate ?? editReminderData?.finishDate;\n\n  const defaultNotifySelectsValues = !!defaultNotifyDate\n    ? createNotifySelectParams(\n        new Date(defaultNotifyDate),\n        defaultStartDate && new Date(defaultStartDate),\n        defaultFinishDate && new Date(defaultFinishDate)\n      )\n    : null;\n\n  return {\n    text: defaultData?.text || editReminderData?.text || \"\",\n    name: defaultData?.name || editReminderData?.name || \"\",\n    icon:\n      defaultData?.icon || editReminderData?.icon || TodoListIconEnum.Reminder,\n    startDate:\n      defaultData?.startDate || editReminderData?.startDate || dayjs().toDate(),\n    finishDate:\n      defaultData?.finishDate ||\n      editReminderData?.finishDate ||\n      dayjs().add(1, \"hour\").toDate(),\n    assignedOwners:\n      defaultData?.assignedOwners || editReminderData?.assignedOwners || [],\n    assignedUsers:\n      defaultData?.assignedUsers || editReminderData?.assignedUsers || [],\n    todoListId:\n      defaultData?.todoListId || editReminderData?.todoListId || \"reminder\",\n    notify: !!notifyDateFromArgs,\n    minsAccordingToTimePoint:\n      defaultNotifySelectsValues?.minsAccordingToTimePoint || 15,\n    beforeOrAfter: defaultNotifySelectsValues?.beforeOrAfter || \"Before\",\n    timePoint: defaultNotifySelectsValues?.timePoint || \"Start\",\n    notifyDate: defaultNotifyDate,\n  };\n};\n\nexport default useCreateDefaultReminderDialogData;\n","import { Button } from \"atomicComponents/atoms/Button\";\nimport Dialog from \"atomicComponents/atoms/Dialog\";\nimport { useDialogs } from \"framework/dialogs\";\nimport useAppDialogState from \"framework/dialogs/hooks/useAppDialogState\";\nimport { initialTaskDialog } from \"framework/dialogs/models/initialState.const\";\nimport { TranslationKeys } from \"framework/translations/translatedTexts/translationKeys\";\nimport { IReminder } from \"linked-models/reminder/reminder.dto\";\nimport { useCreateReminderMutation } from \"pages/RemindersPage/mutations/createReminder/createReminder.mutation\";\nimport { useEditReminderMutation } from \"pages/RemindersPage/mutations/editReminder/editReminder.mutation\";\nimport { memo, useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport AccessChoose from \"./components/AccessChoose\";\nimport DeleteSection from \"./components/DeleteSection\";\nimport GeneralInfo from \"./components/GeneralInfo\";\nimport NotifySetup from \"./components/NotifySetup\";\nimport ScopesChoose from \"./components/ScopesChoose\";\nimport useCreateDefaultReminderDialogData from \"./hooks/useCreateDefaultReminderDialogData\";\nimport { IReminderDialog } from \"./models/reminderDialog.model\";\nimport { IReminderDialogState } from \"./models/reminderDialogState.model\";\n\nconst ReminderDialog = (): JSX.Element => {\n  const {\n    dialogsState: {\n      reminderDialog: { editReminderData, visible, defaultData },\n    },\n    dialogsActions: { updateReminderDialog },\n  } = useDialogs();\n  const createReminderMutation = useCreateReminderMutation();\n  const editReminderMutation = useEditReminderMutation();\n  const { t } = useTranslation();\n  const [open, onClose] = useAppDialogState(visible, () =>\n    updateReminderDialog(initialTaskDialog)\n  );\n  const [expandedAccordion, setExpandedAccordion] = useState(\"general\");\n\n  const handleAccordionChange = (panel: string) => () => {\n    if (expandedAccordion === panel) setExpandedAccordion(\"\");\n    else {\n      setExpandedAccordion(panel);\n    }\n  };\n\n  const defaultFormValues = useCreateDefaultReminderDialogData(\n    defaultData,\n    editReminderData\n  );\n\n  const methods = useForm<IReminderDialog>({\n    defaultValues: defaultFormValues,\n  });\n\n  const onSubmit = (data: IReminderDialogState) => {\n    const ownerEmails = data.assignedOwners.map((owner) => owner.email);\n    const userEmails = data.assignedUsers.map((user) => user.email);\n\n    if (editReminderData) {\n      editReminderMutation.mutate({\n        todoListId: editReminderData.todoListId,\n        taskId: editReminderData.taskId,\n        data: {\n          ...data,\n          assignedOwners: ownerEmails,\n          assignedUsers: userEmails,\n        },\n      });\n    } else {\n      if (!data.startDate || !data.finishDate || !data.text || !data.icon)\n        return;\n      const createReminderData: IReminder = {\n        ...data,\n        assignedOwners: ownerEmails,\n        assignedUsers: userEmails,\n        text: data.text,\n        name: data.text,\n        icon: data.icon,\n        startDate: data.startDate,\n        finishDate: data.finishDate,\n      };\n      createReminderMutation.mutate(createReminderData);\n    }\n\n    updateReminderDialog(initialTaskDialog);\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <FormProvider {...methods}>\n        <GeneralInfo\n          expandedAccordion={expandedAccordion}\n          handleAccordionChange={handleAccordionChange}\n          editReminderData={editReminderData}\n          onSubmit={onSubmit}\n        />\n        {!editReminderData && (\n          <ScopesChoose\n            expandedAccordion={expandedAccordion}\n            handleAccordionChange={handleAccordionChange}\n          />\n        )}\n        <AccessChoose\n          expandedAccordion={expandedAccordion}\n          handleAccordionChange={handleAccordionChange}\n          defaultFormValues={defaultFormValues}\n        />\n        <NotifySetup\n          expandedAccordion={expandedAccordion}\n          handleAccordionChange={handleAccordionChange}\n        />\n        {!!editReminderData && (\n          <DeleteSection\n            expandedAccordion={expandedAccordion}\n            onClose={onClose}\n            handleAccordionChange={handleAccordionChange}\n            defaultFormValues={defaultFormValues}\n            editReminderData={editReminderData}\n          />\n        )}\n        <Button\n          onClick={methods.handleSubmit(onSubmit)}\n          sx={{ margin: \"0 auto\" }}\n        >\n          {editReminderData\n            ? t(TranslationKeys.Save)\n            : t(TranslationKeys.CreateReminder)}\n        </Button>\n      </FormProvider>\n    </Dialog>\n  );\n};\n\nexport default memo(ReminderDialog);\n","import { useMutation } from \"@tanstack/react-query\";\nimport { apiPost } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { IReminder, IReminderDTO } from \"linked-models/reminder/reminder.dto\";\nimport { IReminderAttached } from \"linked-models/reminder/reminder.model\";\nimport { URL_REMINDERS } from \"linked-models/reminder/reminder.urls\";\nimport { stringifyTaskDateFields } from \"linked-models/task/task.dto\";\nimport useUpdateQueriesAfterCreatingReminder from \"./useUpdateQueriesAfterCreatingReminder\";\n\nexport const useCreateReminderMutation = () => {\n  const updateQueriesAfterCreatingReminder =\n    useUpdateQueriesAfterCreatingReminder();\n\n  const createReminder = async (data: IReminder) => {\n    const url = FRONTIFY_URL(URL_REMINDERS);\n    return apiPost<IReminderDTO, IReminderAttached>(\n      url,\n      stringifyTaskDateFields(data)\n    ).then((res) => res.data);\n  };\n\n  return useMutation(createReminder, {\n    onSuccess: updateQueriesAfterCreatingReminder,\n  });\n};\n","import { Popover, styled } from \"@mui/material\";\n\nexport const StyledIconPickerWrapper = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  gap: \"10px\",\n  padding: 10,\n  borderRadius: 10,\n  background: theme.palette.primary.main,\n}));\n\nexport const StyledPopover = styled(Popover)(({ theme }) => ({\n  \"& .MuiPopover-paper\": {\n    borderRadius: 10,\n    background: theme.palette.primary.main,\n  },\n}));\n","import { IconButton } from \"@mui/material\";\nimport { TodoListIconEnum } from \"linked-models/todoList/todoList.enum\";\nimport TodoListIcon from \"pages/TodoListsPage/components/TodoListIcon\";\nimport { memo, useState } from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport { StyledIconPickerWrapper, StyledPopover } from \"./styles\";\n\nconst IconPicker = () => {\n  const [iconPickerAnchorEl, setIconPickerAnchorEl] =\n    useState<HTMLButtonElement | null>(null);\n  const { setValue, getValues } = useFormContext();\n  const handleClose = () => setIconPickerAnchorEl(null);\n\n  return (\n    <div>\n      <IconButton\n        onClick={(event: React.MouseEvent<HTMLButtonElement>) => {\n          setIconPickerAnchorEl(event.currentTarget);\n        }}\n      >\n        <TodoListIcon type={getValues(\"icon\")} />\n      </IconButton>\n      <StyledPopover\n        open={Boolean(iconPickerAnchorEl)}\n        anchorEl={iconPickerAnchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n      >\n        <StyledIconPickerWrapper>\n          {Object.values(TodoListIconEnum).map((iconType) => {\n            return (\n              <TodoListIcon\n                key={iconType}\n                type={iconType}\n                onClick={() => {\n                  setValue(\"icon\", iconType);\n                  handleClose();\n                }}\n              />\n            );\n          })}\n        </StyledIconPickerWrapper>\n      </StyledPopover>\n    </div>\n  );\n};\n\nexport default memo(IconPicker);\n","import { useMutation } from \"@tanstack/react-query\";\nimport { apiPut } from \"framework/asyncInteractions\";\nimport { FRONTIFY_URL } from \"framework/asyncInteractions/frontifyRequestUrl.helper\";\nimport { IReminder, IReminderDTO } from \"linked-models/reminder/reminder.dto\";\nimport { IReminderAttached } from \"linked-models/reminder/reminder.model\";\nimport { URL_REMINDERS } from \"linked-models/reminder/reminder.urls\";\nimport { stringifyTaskDateFields } from \"linked-models/task/task.dto\";\nimport { URL_TASK } from \"linked-models/task/task.urls\";\nimport {\n  URL_TODO_LIST,\n  URL_TODO_LISTS,\n} from \"linked-models/todoList/todoList.urls\";\nimport useUpdateQueriesAfterEditingReminder from \"./useUpdateQueriesAfterEditingReminder\";\n\nexport const useEditReminderMutation = () => {\n  const updateQueriesAfterEditingReminder =\n    useUpdateQueriesAfterEditingReminder();\n\n  const editReminderInTodoList = async ({\n    todoListId,\n    taskId,\n    data,\n  }: {\n    todoListId: string;\n    taskId: string;\n    data: Partial<IReminder>;\n  }) => {\n    return apiPut<Partial<IReminderDTO>, IReminderAttached>(\n      FRONTIFY_URL(\n        URL_TODO_LISTS +\n          URL_TODO_LIST(todoListId) +\n          URL_REMINDERS +\n          URL_TASK(taskId)\n      ),\n      stringifyTaskDateFields(data)\n    ).then((res) => res.data);\n  };\n\n  return useMutation(editReminderInTodoList, {\n    onSuccess: updateQueriesAfterEditingReminder,\n  });\n};\n","export enum CollaborationState {\n  /** The collaboration is pending - user has not accepted or rejected it yet */\n  Pending = \"PENDING\",\n  /** The collaboration is accepted */\n  Accepted = \"ACCEPTED\",\n  /** The collaboration was rejected for the first time */\n  Rejected = \"REJECTED\",\n  /** The collaboration request was rejected and then re-opened */\n  ReOpened = \"REOPENED\",\n  /** User has blocked the collaboration with other user or rejected it for the second time */\n  Blocked = \"BLOCKED\",\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 22H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2v6h-2v-2H5v10h7v2zm10.13-5.01.71-.71c.39-.39.39-1.02 0-1.41l-.71-.71a.9959.9959 0 0 0-1.41 0l-.71.71 2.12 2.12zm-.71.71-5.3 5.3H14v-2.12l5.3-5.3 2.12 2.12z\"\n}), 'EditCalendar');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z\"\n}), 'NotificationsNone');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\"\n}), 'Share');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 13v8h8v-8h-8zM3 21h8v-8H3v8zM3 3v8h8V3H3zm13.66-1.31L11 7.34 16.66 13l5.66-5.66-5.66-5.65z\"\n}), 'Widgets');\nexports.default = _default;"],"names":["StyledWrapper","styled","shouldForwardProp","prop","_ref","display","alignItems","width","height","marginTop","spacingTop","marginBottom","spacingBottom","StyledLine","_ref2","theme","color","flexGrow","borderBottom","concat","palette","primary","contrastText","borderColor","StyledText","_ref3","paddingLeft","paddingRight","Separator","text","variant","_jsxs","children","_jsx","useGetUserCollaborantsQuery","options","getUserCollaborants","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","apiGet","FRONTIFY_URL","URL_USERS","URL_COLLABORANTS","then","res","data","abrupt","sent","stop","apply","arguments","useQuery","StyledAutocompleteChip","Chip","zIndex","backgroundColor","main","secondary","margin","StyledAutocomplete","Autocomplete","CollaborantAutocomplete","name","defaultValues","autocompleteProps","_objectWithoutProperties","_excluded","t","useTranslation","watch","useWatch","setValue","useFormContext","currentWatchValue","currentUser","useCurrentUser","userCollaborantsQuery","collaborantsEmails","useMemo","_userCollaborantsQuer","emails","Set","forEach","col","state","CollaborationState","Accepted","add","creator","email","user","Array","from","allUserEmails","_toConsumableArray","map","u","userEmailToPublicDataMap","_userCollaborantsQuer2","Map","set","selectedEmails","_objectSpread","renderTags","value","index","label","disabled","includes","onDelete","newValue","filter","v","multiple","e","onChange","_","userValue","userData","get","push","defaultValue","renderInput","params","TextField","InputLabelProps","undefined","noOptionsText","TranslationKeys","NoCollaborantOption","memo","AccessChoose","expandedAccordion","handleAccordionChange","defaultFormValues","StyledAccordion","expanded","disableGutters","AccordionSummary","expandIcon","ExpandMoreIcon","Tooltip","title","ManageAccessReminderDescription","ShareIcon","sx","transform","ManageAccess","AccordionDetails","StyledForm","Typography","CurrentOwners","assignedOwners","CurrentUsers","assignedUsers","DeleteSection","editReminderData","onClose","deleteReminderMutation","updateQueriesAfterDeletingReminder","useUpdateQueriesAfterDeletingReminder","deleteReminder","todoListId","taskId","url","URL_TODO_LISTS","URL_TODO_LIST","URL_REMINDERS","URL_TASK","apiDelete","_x","useMutation","onSuccess","useDeleteReminderMutation","DeleteReminderDescription","DeleteForeverIcon","DeleteReminder","flexDirection","gap","justifyContent","DeleteReminderWarning","Button","onClick","_defaultFormValues$to","_editReminderData$tas","mutate","GeneralInfo","_errors$name","_errors$text","onSubmit","_useFormContext","handleSubmit","control","errors","formState","setFocus","markAccordionError","useEffect","GeneralInfoReminderDescription","EventIcon","EditReminder","CreateReminder","ControlledTextField","autoFocus","required","error","helperText","type","FieldRequired","placeholder","ReminderName","ReminderDescription","DatesPickers","DatesInfo","startDate","finishDate","year","month","day","hour","minute","_Fragment","StartDate","style","fontWeight","Date","toLocaleString","FinishDate","NotifySetup","SetNotificationDescription","NotificationsNoneIcon","SetNotification","ControlledCheckbox","NotifyMe","NotifyForm","TodoListSelect","getUserTodoListsWithMembersQuery","withMembers","getTodoLists","_defineProperty","PARAM_WITH_MEMBERS","useGetUserTodoListsQuery","todoListIdToNameAndMembersMap","_getUserTodoListsWith","todoList","id","members","o","displayName","join","ScopeChoose","Controller","render","_getUserTodoListsWith2","_getUserTodoListsWith3","_ref$field","field","StyledInlineInputs","IconPicker","Select","Reminder","renderValue","_todoListIdToNameAndM","_e$target","target","MenuItem","ListItemIcon","EditCalendarIcon","ListItemText","secondaryTypographyProps","whiteSpace","ReminderInfo","OrChooseTodoList","_todoListIdToNameAndM2","TodoListIcon","icon","primaryTypographyProps","overflow","textOverflow","ScopesChoose","ScopeDescription","WidgetsIcon","defaultData","_defaultData$startDat","_defaultData$notifyDa","_defaultData$finishDa","defaultStartDate","notifyDateFromArgs","notifyDate","defaultNotifyDate","getTime","defaultFinishDate","defaultNotifySelectsValues","createNotifySelectParams","TodoListIconEnum","dayjs","toDate","notify","minsAccordingToTimePoint","beforeOrAfter","timePoint","ReminderDialog","_useDialogs","useDialogs","_useDialogs$dialogsSt","dialogsState","reminderDialog","visible","updateReminderDialog","dialogsActions","createReminderMutation","updateQueriesAfterCreatingReminder","useUpdateQueriesAfterCreatingReminder","createReminder","apiPost","stringifyTaskDateFields","useCreateReminderMutation","editReminderMutation","useEditReminderMutation","_useAppDialogState","useAppDialogState","initialTaskDialog","_useAppDialogState2","_slicedToArray","open","_useState","useState","_useState2","setExpandedAccordion","panel","useCreateDefaultReminderDialogData","methods","useForm","ownerEmails","owner","userEmails","createReminderData","Dialog","FormProvider","Save","StyledIconPickerWrapper","flexWrap","padding","borderRadius","background","StyledPopover","Popover","iconPickerAnchorEl","setIconPickerAnchorEl","getValues","handleClose","IconButton","event","currentTarget","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Object","values","iconType","updateQueriesAfterEditingReminder","useUpdateQueriesAfterEditingReminder","editReminderInTodoList","apiPut","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}